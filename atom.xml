<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-11-10T14:57:22.712Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>应用设计模式</title>
    <link href="http://example.com/2021/11/10/%E5%BA%94%E7%94%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    <id>http://example.com/2021/11/10/%E5%BA%94%E7%94%A8%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</id>
    <published>2021-11-10T14:23:24.000Z</published>
    <updated>2021-11-10T14:57:22.712Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-创建型：解决对象的创建问题"><a href="#1-创建型：解决对象的创建问题" class="headerlink" title="1. 创建型：解决对象的创建问题"></a>1. 创建型：解决对象的创建问题</h2><h3 id="（1）单例模式"><a href="#（1）单例模式" class="headerlink" title="（1）单例模式"></a>（1）单例模式</h3><p>创建全局唯一的对象<br>实现方式：饿汉式，懒汉式，双重检测，静态内部类，枚举</p><h3 id="（2）工厂模式"><a href="#（2）工厂模式" class="headerlink" title="（2）工厂模式"></a>（2）工厂模式</h3><p>简单工厂，工厂方法，抽象工厂<br>用来创建不同但是相关类型的对象（继承同一父类或者接口的一组子类），由给定参数决定创建哪种类型的对象</p><h3 id="（3）建造者模式"><a href="#（3）建造者模式" class="headerlink" title="（3）建造者模式"></a>（3）建造者模式</h3><p>用来创建复杂对象，可以通过设置不同的可选参数，“定制化”地创建不同的参数。<br>将一个复杂对象的构建与他的表示分离，使得同样的创建过程，可以创建不同的表示<br>建立胖小人，瘦小人</p><h3 id="（4）原型模式"><a href="#（4）原型模式" class="headerlink" title="（4）原型模式"></a>（4）原型模式</h3><p>对象创建成本比较大，同一个类的不同对象之间的差别不大，可以利用已有对象（原型）进行复制/拷贝的方式，来创建新对象，包括了深拷贝和浅拷贝。</p><h2 id="2-结构设计模式：总结了类或者对象组合在一起的经典结构"><a href="#2-结构设计模式：总结了类或者对象组合在一起的经典结构" class="headerlink" title="2. 结构设计模式：总结了类或者对象组合在一起的经典结构"></a>2. 结构设计模式：总结了类或者对象组合在一起的经典结构</h2><h3 id="（1）代理模式"><a href="#（1）代理模式" class="headerlink" title="（1）代理模式"></a>（1）代理模式</h3><p>在不改变原始类接口的条件下，为原始类定义一个代理类，目的是控制访问，而非加强功能。<br>一般用于非功能性需求：日志，监控，统计等等</p><h3 id="（2）桥接模式"><a href="#（2）桥接模式" class="headerlink" title="（2）桥接模式"></a>（2）桥接模式</h3><p>将抽象和实现解耦，能独立开发<br>组合优先于继承</p><h3 id="（3）装饰器模式"><a href="#（3）装饰器模式" class="headerlink" title="（3）装饰器模式"></a>（3）装饰器模式</h3><p>解决继承关系过于复杂的问题<br>通过组合，代替继承，给原始类添加增强功能</p><h3 id="（4）适配器模式"><a href="#（4）适配器模式" class="headerlink" title="（4）适配器模式"></a>（4）适配器模式</h3><p>提供跟原始类不同的接口<br>将不兼容的接口转换为可兼容的接口<br>类适配器（继承） + 对象适配器（组合）</p><h3 id="（5）门面模式"><a href="#（5）门面模式" class="headerlink" title="（5）门面模式"></a>（5）门面模式</h3><p>封装细粒度的接口，提供组合各个细粒度接口的高层次接口，来提高接口的易用性</p><h3 id="（6）组合模式"><a href="#（6）组合模式" class="headerlink" title="（6）组合模式"></a>（6）组合模式</h3><p>主要用来处理树形结构数据</p><h3 id="（7）享元模式"><a href="#（7）享元模式" class="headerlink" title="（7）享元模式"></a>（7）享元模式</h3><p>被共享的单元。<br>复用对象，节省内存，享元对象是不可变对象。</p><h2 id="3-行为型设计模式：类或对象之间的交互"><a href="#3-行为型设计模式：类或对象之间的交互" class="headerlink" title="3. 行为型设计模式：类或对象之间的交互"></a>3. 行为型设计模式：类或对象之间的交互</h2><h3 id="（1）观察者类型"><a href="#（1）观察者类型" class="headerlink" title="（1）观察者类型"></a>（1）观察者类型</h3><h3 id="（2）模板模式"><a href="#（2）模板模式" class="headerlink" title="（2）模板模式"></a>（2）模板模式</h3><h3 id="（3）策略模式"><a href="#（3）策略模式" class="headerlink" title="（3）策略模式"></a>（3）策略模式</h3><h3 id="（4）职责链模式"><a href="#（4）职责链模式" class="headerlink" title="（4）职责链模式"></a>（4）职责链模式</h3><p>多个处理器依次处理同一个请求<br>实现过滤器，拦截器</p><h3 id="（5）迭代器模式"><a href="#（5）迭代器模式" class="headerlink" title="（5）迭代器模式"></a>（5）迭代器模式</h3><p>游标模式，用来遍历集合对象</p><h3 id="（6）状态模式"><a href="#（6）状态模式" class="headerlink" title="（6）状态模式"></a>（6）状态模式</h3><p>用来实现状态机</p><h3 id="（7）访问者模式"><a href="#（7）访问者模式" class="headerlink" title="（7）访问者模式"></a>（7）访问者模式</h3><h3 id="（8）备忘录模式"><a href="#（8）备忘录模式" class="headerlink" title="（8）备忘录模式"></a>（8）备忘录模式</h3><p>快照模式<br>用来防丢失，撤销，恢复</p><h3 id="（9）命令模式"><a href="#（9）命令模式" class="headerlink" title="（9）命令模式"></a>（9）命令模式</h3><h3 id="（10）解释器模式"><a href="#（10）解释器模式" class="headerlink" title="（10）解释器模式"></a>（10）解释器模式</h3><h3 id="（11）中介模式"><a href="#（11）中介模式" class="headerlink" title="（11）中介模式"></a>（11）中介模式</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-创建型：解决对象的创建问题&quot;&gt;&lt;a href=&quot;#1-创建型：解决对象的创建问题&quot; class=&quot;headerlink&quot; title=&quot;1. 创建型：解决对象的创建问题&quot;&gt;&lt;/a&gt;1. 创建型：解决对象的创建问题&lt;/h2&gt;&lt;h3 id=&quot;（1）单例模式&quot;&gt;&lt;a</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="原理" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="design pattern" scheme="http://example.com/tags/design-pattern/"/>
    
  </entry>
  
  <entry>
    <title>SSL+TLS+HTTPS</title>
    <link href="http://example.com/2021/11/10/SSL-TLS-HTTPS/"/>
    <id>http://example.com/2021/11/10/SSL-TLS-HTTPS/</id>
    <published>2021-11-10T14:21:01.000Z</published>
    <updated>2021-11-10T14:56:17.534Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-HTTPS"><a href="#1-HTTPS" class="headerlink" title="1. HTTPS"></a>1. HTTPS</h2><p>HTTP + 加密 + 认证 + 完整性保护 = HTTPS</p><p>HTTP，四层，从上到下为：应用层，HTTP，，TCP，IP<br>HTTPS，五层，从上到下为：应用层，HTTP，SSL，TCP，IP</p><h2 id="2-SSL-TLS"><a href="#2-SSL-TLS" class="headerlink" title="2. SSL/TLS"></a>2. SSL/TLS</h2><p>HTTP和TCP之间的中转协议，应用层协议</p><h2 id="3-TLS"><a href="#3-TLS" class="headerlink" title="3. TLS"></a>3. TLS</h2><p>TLS是SSL的升级版</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-HTTPS&quot;&gt;&lt;a href=&quot;#1-HTTPS&quot; class=&quot;headerlink&quot; title=&quot;1. HTTPS&quot;&gt;&lt;/a&gt;1. HTTPS&lt;/h2&gt;&lt;p&gt;HTTP + 加密 + 认证 + 完整性保护 = HTTPS&lt;/p&gt;
&lt;p&gt;HTTP，四层，从上</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="网络" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="ssl" scheme="http://example.com/tags/ssl/"/>
    
    <category term="ttl" scheme="http://example.com/tags/ttl/"/>
    
    <category term="https" scheme="http://example.com/tags/https/"/>
    
  </entry>
  
  <entry>
    <title>机型分析</title>
    <link href="http://example.com/2021/11/10/%E6%9C%BA%E5%9E%8B%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2021/11/10/%E6%9C%BA%E5%9E%8B%E5%88%86%E6%9E%90/</id>
    <published>2021-11-10T13:53:52.000Z</published>
    <updated>2021-11-10T14:57:46.474Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-计算型"><a href="#1-计算型" class="headerlink" title="1. 计算型"></a>1. 计算型</h2><p>B70，M10：CPU高，内存高</p><h2 id="2-存储"><a href="#2-存储" class="headerlink" title="2. 存储"></a>2. 存储</h2><p>Z4（Z3，TS）：磁盘高，SSD高</p><h2 id="3-云机器"><a href="#3-云机器" class="headerlink" title="3. 云机器"></a>3. 云机器</h2><h2 id="4-中间层"><a href="#4-中间层" class="headerlink" title="4. 中间层"></a>4. 中间层</h2><p>B6：内存还行</p><h2 id="5-虚拟机"><a href="#5-虚拟机" class="headerlink" title="5. 虚拟机"></a>5. 虚拟机</h2><h2 id="6-机型命名-V6-0"><a href="#6-机型命名-V6-0" class="headerlink" title="6. 机型命名 V6.0"></a>6. 机型命名 V6.0</h2><p>CG1L - 10G</p><h4 id="（1）第一段：英文，机型特征"><a href="#（1）第一段：英文，机型特征" class="headerlink" title="（1）第一段：英文，机型特征"></a>（1）第一段：英文，机型特征</h4><ul><li>计算类：C（Computing），合并B和M（V5.0，内存和CPU好）</li><li>存储类：S（Storage）</li><li>大数据类：B（Bigdata）</li><li>异构类：F（FPGA），G（GPU）</li><li>专用类：D（Dedicated，替代Z）</li><li>网络类：N（Networking server）</li><li>项目类：P（Project），代替原Other机型</li></ul><h4 id="（2）第二段：业务属性"><a href="#（2）第二段：业务属性" class="headerlink" title="（2）第二段：业务属性"></a>（2）第二段：业务属性</h4><ul><li>C类分G：通用，General</li><li>S类分热、湿、冷：<ul><li>SH，热数据，使用SSD硬盘，TS8X（V5.0）</li><li>SW，温数据，TS60，TSH（混合SSD和Sate）</li><li>SC，冷数据，使用4T和8T更大硬盘</li></ul></li><li>G类分Traning，Inference和Rendering</li></ul><h4 id="（3）第三段：数字"><a href="#（3）第三段：数字" class="headerlink" title="（3）第三段：数字"></a>（3）第三段：数字</h4><p>顺排，体现统一业务属性的不同细分场景<br>体现CPU，硬盘，内存</p><h4 id="（4）第四段：字母"><a href="#（4）第四段：字母" class="headerlink" title="（4）第四段：字母"></a>（4）第四段：字母</h4><p>非必选，机型小属性，比如液冷用L</p><h4 id="（5）第五段：网卡速率"><a href="#（5）第五段：网卡速率" class="headerlink" title="（5）第五段：网卡速率"></a>（5）第五段：网卡速率</h4><h2 id="所有机型对比"><a href="#所有机型对比" class="headerlink" title="所有机型对比"></a>所有机型对比</h2><table><thead><tr><th>名称</th><th>类型</th><th>用途</th><th>CPU</th><th>内存</th><th>磁盘/SSD</th><th>网络类型</th></tr></thead><tbody><tr><td>V4-8-100</td><td>虚拟机</td><td></td><td>4</td><td>8</td><td>100/0</td><td>千兆</td></tr><tr><td>V6-15-100</td><td>虚拟机</td><td></td><td>6</td><td>15</td><td>100/0</td><td>千兆</td></tr><tr><td>V8-16-200</td><td>虚拟机</td><td></td><td>8</td><td>16</td><td>200/0</td><td>千兆</td></tr><tr><td>V16-24-300</td><td>虚拟机</td><td></td><td>16</td><td>64</td><td>300/0</td><td>万兆</td></tr><tr><td>V23-128-800</td><td>虚拟机</td><td></td><td>24</td><td>128</td><td>800/0</td><td>万兆</td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>A5（停）</td><td>实体机</td><td>后台数据库</td><td>4</td><td>32</td><td>300*6/0</td><td>千兆</td></tr><tr><td>B6</td><td>实体机</td><td>中间层</td><td>2<em>6</em>2</td><td>64</td><td>300/0</td><td>千兆</td></tr><tr><td>B70</td><td>实体机</td><td>计算</td><td>2<em>12</em>2</td><td>128</td><td>300*6/0</td><td>万兆</td></tr><tr><td>C1</td><td>实体机</td><td>前端接入层</td><td>1<em>4</em>2</td><td>16</td><td>1024</td><td>千兆</td></tr><tr><td>M1</td><td>实体机</td><td>虚拟化，大内存</td><td>2<em>6</em>2</td><td>128</td><td>900/0</td><td>千兆</td></tr><tr><td>M2</td><td>实体机</td><td>虚拟化</td><td>2<em>6</em>2</td><td>64</td><td>900/0</td><td>千兆</td></tr><tr><td>M10</td><td>实体机</td><td>计算</td><td>2<em>12</em>2</td><td>128</td><td>300*6/0</td><td>万兆</td></tr><tr><td>TS6</td><td>架构部TFS</td><td>大存储</td><td>1<em>6</em>2</td><td>32</td><td>2T*12/240</td><td>千兆</td></tr><tr><td>TS60</td><td>实体机</td><td>大存储</td><td>24</td><td>64</td><td>2T*12/80</td><td>万兆</td></tr><tr><td>TS8</td><td>架构部TSSD/微信</td><td>数据库存储</td><td>2<em>6</em>2</td><td>32</td><td>0/300*12</td><td>千兆</td></tr><tr><td>TS80</td><td>架构部TSSD/微信</td><td>数据库存储</td><td>24</td><td>64</td><td>1.8T*4/80</td><td>万兆</td></tr><tr><td>TS90</td><td>云平台部</td><td>存储</td><td>24</td><td>256</td><td>0/800*12</td><td>万兆</td></tr><tr><td>TSC1</td><td>实体机</td><td></td><td>12</td><td>32</td><td>24576/0</td><td>千兆</td></tr><tr><td>TSC10</td><td>实体机</td><td></td><td>12</td><td>32</td><td>24576/240</td><td>万兆</td></tr><tr><td>TS5</td><td>实体机</td><td>存储</td><td>2*6</td><td>64</td><td>2T*12</td><td>hadoop使用</td></tr><tr><td>TS9</td><td>云平台部</td><td>SSD高性能</td><td>2*6</td><td>128</td><td>0/3100（480*8）</td><td></td></tr><tr><td>Z3</td><td>实体机</td><td>互娱存储</td><td>24</td><td>64</td><td>300*2/1228</td><td>千兆</td></tr><tr><td>Z30</td><td>实体机</td><td></td><td>24</td><td>238</td><td>300*4/2.0T</td><td>万兆</td></tr><tr><td>Z4</td><td>实体机</td><td>CFT存储</td><td>24</td><td>64</td><td>300*2/0</td><td></td></tr><tr><td>G7</td><td>实体机</td><td></td><td>28</td><td>256</td><td>0/2288</td><td>万兆</td></tr><tr><td>G6</td><td>实体机</td><td></td><td>28</td><td>256</td><td>600/4800</td><td>万兆</td></tr><tr><td>CG1-10G</td><td>替代B70,M10</td><td>计算类</td><td>80</td><td>192</td><td>0/1440</td><td>万兆</td></tr><tr><td>CG2-10G</td><td></td><td>特征类</td><td>40</td><td>1384</td><td>0/2880</td><td>万兆</td></tr><tr><td>SC3-10G</td><td>替代TSC20</td><td>存储类</td><td>8</td><td>64</td><td>144000/480</td><td>万兆</td></tr><tr><td>SH1-10G</td><td>替代TS80</td><td>存储类</td><td>16</td><td>64</td><td>0/7680</td><td>万兆</td></tr><tr><td>SH3-10G</td><td>替代Z30</td><td>存储类</td><td>16</td><td>128</td><td>3600/3200</td><td>万兆</td></tr><tr><td>S3·2*LARGE16.C200</td><td>云机型</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>D1</td><td>云机型</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>I3</td><td>云机型</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>M3</td><td>云机型</td><td></td><td></td><td></td><td></td><td></td></tr><tr><td>Y0-MI52-25G</td><td>云机型</td><td></td><td>8</td><td>40</td><td>2T</td><td></td></tr></tbody></table><p>1 CGI = 1.7 M10<br>1 V8 = 2 V4 = 1 C1</p><p>TS80比TS8成本低，替代品<br>TS90和TS9差不多，属于SSD中性能比较低的</p><p>A5 -&gt; Z3/Z4<br>A5 -&gt; TS8/TS80</p><p>T5：存储大，性能中<br>T6：存储大，性能高</p><p>TS5合并到TS6<br>TS8合并到Z3/Z4</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-计算型&quot;&gt;&lt;a href=&quot;#1-计算型&quot; class=&quot;headerlink&quot; title=&quot;1. 计算型&quot;&gt;&lt;/a&gt;1. 计算型&lt;/h2&gt;&lt;p&gt;B70，M10：CPU高，内存高&lt;/p&gt;
&lt;h2 id=&quot;2-存储&quot;&gt;&lt;a href=&quot;#2-存储&quot; class</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="机型" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E6%9C%BA%E5%9E%8B/"/>
    
    
    <category term="computer type" scheme="http://example.com/tags/computer-type/"/>
    
  </entry>
  
  <entry>
    <title>容灾</title>
    <link href="http://example.com/2021/11/10/%E5%AE%B9%E7%81%BE/"/>
    <id>http://example.com/2021/11/10/%E5%AE%B9%E7%81%BE/</id>
    <published>2021-11-10T13:53:45.000Z</published>
    <updated>2021-11-10T13:56:06.538Z</updated>
    
    <content type="html"><![CDATA[<p>集群/set化作用</p><ul><li>流量拆分</li><li>故障隔离</li><li>异地容灾</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;集群/set化作用&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;流量拆分&lt;/li&gt;
&lt;li&gt;故障隔离&lt;/li&gt;
&lt;li&gt;异地容灾&lt;/li&gt;
&lt;/ul&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>分布式事务一致性解决方案</title>
    <link href="http://example.com/2021/11/10/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E4%B8%80%E8%87%B4%E6%80%A7%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://example.com/2021/11/10/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E4%B8%80%E8%87%B4%E6%80%A7%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2021-11-10T13:46:53.000Z</published>
    <updated>2021-11-10T14:56:57.704Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-数据一致性"><a href="#1-数据一致性" class="headerlink" title="1. 数据一致性"></a>1. 数据一致性</h2><p>主库、从库、缓存数据一致性<br>多副本数据一致性<br>分布式服务的数据一致性</p><h2 id="2-概念"><a href="#2-概念" class="headerlink" title="2. 概念"></a>2. 概念</h2><p>强一致性<br>弱一致性<br>最终一致性</p><h2 id="3-原理"><a href="#3-原理" class="headerlink" title="3. 原理"></a>3. 原理</h2><ul><li>事务的ACID特性<ul><li>原子性（Atomicity）</li><li>一致性（Consistency）</li><li>隔离性（Isolation）</li><li>持久性（Durability）</li></ul></li><li>CAP定理，无法同时满足<ul><li>Consistency，一致性</li><li>Availability，可用性</li><li>Partition tolerance，分区容错性</li></ul></li><li>BASE理论：BASE 理论是针对 NoSQL 数据库而言的，它是对 CAP 理论中一致性（C）和可用性（A）进行权衡的结果<ul><li>基本可用（Basically Available）</li><li>软状态（Soft-state）</li><li>最终一致性（Eventually Consistent）</li></ul></li></ul><h2 id="4-协议"><a href="#4-协议" class="headerlink" title="4. 协议"></a>4. 协议</h2><ul><li>两阶段提交</li><li>三阶段提交</li><li>TCC</li><li>Paxos</li><li>ZAB：zk使用</li><li>Raft：先选出主节点</li><li>Quorum</li><li>Gossip</li></ul><h2 id="5-强一致性方案"><a href="#5-强一致性方案" class="headerlink" title="5. 强一致性方案"></a>5. 强一致性方案</h2><h3 id="（1）2PC，二阶段提交协议"><a href="#（1）2PC，二阶段提交协议" class="headerlink" title="（1）2PC，二阶段提交协议"></a>（1）2PC，二阶段提交协议</h3><ul><li>阶段一：Prepare，准备，投票</li><li>阶段二：Commit/Cancel，提交，回滚<br>缺点：阻塞范围广，不适合高并发场景</li></ul><h3 id="（2）DTP-XA规范"><a href="#（2）DTP-XA规范" class="headerlink" title="（2）DTP/XA规范"></a>（2）DTP/XA规范</h3><ul><li>AP：应用程序</li><li>RMS：资源管理器，参与者</li><li>TM：事务管理器，协调者</li><li>XA：组件之间香菇操作的接口</li></ul><h2 id="6-最终一致性方案"><a href="#6-最终一致性方案" class="headerlink" title="6. 最终一致性方案"></a>6. 最终一致性方案</h2><h3 id="（1）TCC"><a href="#（1）TCC" class="headerlink" title="（1）TCC"></a>（1）TCC</h3><ul><li>T：try，锁定资源</li><li>C：Confirm，确认，补偿</li><li>C：Cancel<br>阻塞时间范围短，性能比2PC有提升</li></ul><h3 id="（2）本地事务状态表"><a href="#（2）本地事务状态表" class="headerlink" title="（2）本地事务状态表"></a>（2）本地事务状态表</h3><p>调用方调用分布式事务之前，将待执行的事务流程和状态信息，存储到数据库中，之后每次调用成功，更新对应的事务状态，失败则终止</p><h3 id="（3）消息中间件"><a href="#（3）消息中间件" class="headerlink" title="（3）消息中间件"></a>（3）消息中间件</h3><ul><li>消息中间件，不支持事务</li><li>消息中间件，支持事务：定时任务的工作交给消息中间件来提供</li></ul><h2 id="7-弱一致性方案"><a href="#7-弱一致性方案" class="headerlink" title="7. 弱一致性方案"></a>7. 弱一致性方案</h2><h3 id="（1）基于状态的补偿"><a href="#（1）基于状态的补偿" class="headerlink" title="（1）基于状态的补偿"></a>（1）基于状态的补偿</h3><p>事后处理机制</p><h3 id="（2）重试（-回滚）-告警-人工修复"><a href="#（2）重试（-回滚）-告警-人工修复" class="headerlink" title="（2）重试（+回滚） + 告警 + 人工修复"></a>（2）重试（+回滚） + 告警 + 人工修复</h3><p>放弃一致性<br>成本最低，最被动</p><h3 id="（3）事后处理"><a href="#（3）事后处理" class="headerlink" title="（3）事后处理"></a>（3）事后处理</h3><p>对账</p><h2 id="7-结论"><a href="#7-结论" class="headerlink" title="7. 结论"></a>7. 结论</h2><p>数据一致性要求高：金融银行，2PC，强一致性方案<br>可用性 + 一致性：互联网应用，Base理论，最终一致性<br>极端场景：业务特性，弱一致性</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-数据一致性&quot;&gt;&lt;a href=&quot;#1-数据一致性&quot; class=&quot;headerlink&quot; title=&quot;1. 数据一致性&quot;&gt;&lt;/a&gt;1. 数据一致性&lt;/h2&gt;&lt;p&gt;主库、从库、缓存数据一致性&lt;br&gt;多副本数据一致性&lt;br&gt;分布式服务的数据一致性&lt;/p&gt;
&lt;h2</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="分布式事务" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1/"/>
    
    
    <category term="distributed computing" scheme="http://example.com/tags/distributed-computing/"/>
    
  </entry>
  
  <entry>
    <title>模调系统</title>
    <link href="http://example.com/2021/11/10/%E6%A8%A1%E8%B0%83%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2021/11/10/%E6%A8%A1%E8%B0%83%E7%B3%BB%E7%BB%9F/</id>
    <published>2021-11-10T05:08:51.000Z</published>
    <updated>2021-11-10T14:58:08.531Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-系统要求"><a href="#1-系统要求" class="headerlink" title="1. 系统要求"></a>1. 系统要求</h2><h4 id="（1）逻辑耦合低"><a href="#（1）逻辑耦合低" class="headerlink" title="（1）逻辑耦合低"></a>（1）逻辑耦合低</h4><ul><li>拆分成五个模块</li><li>各模块单独配置</li></ul><h4 id="（2）可维护性强"><a href="#（2）可维护性强" class="headerlink" title="（2）可维护性强"></a>（2）可维护性强</h4><ul><li>每个模块调整，不影响其他模块</li><li>接入监控，可以看到每个模块的处理状态</li></ul><h4 id="（3）可扩展性高"><a href="#（3）可扩展性高" class="headerlink" title="（3）可扩展性高"></a>（3）可扩展性高</h4><ul><li>数据拉去：支持配置多个kafka集群</li><li>数据处理<ul><li>通过filter，增加处理流程</li><li>不规范裁剪 + 特殊处理 + IP补充 + 其他</li></ul></li><li>数据缓存<ul><li>通过规则放到不同的列表中</li><li>IP + msgno尾号</li></ul></li><li>数据拉取计算<ul><li>可配置不同的算法</li><li>找FCGI入口 + 计算调用树</li></ul></li><li>数据写入：支持写入多个集群</li></ul><h2 id="2-容量"><a href="#2-容量" class="headerlink" title="2. 容量"></a>2. 容量</h2><h4 id="（1）应用服务器"><a href="#（1）应用服务器" class="headerlink" title="（1）应用服务器"></a>（1）应用服务器</h4><table><thead><tr><th></th><th>前端</th><th>后台</th><th>writer</th><th>openapi</th></tr></thead><tbody><tr><td>每天请求量</td><td>400</td><td>400</td><td></td><td>4863</td></tr><tr><td>各接口访问峰值</td><td>15/min</td><td>15/min</td><td></td><td>161/min</td></tr><tr><td>平均请求响应</td><td>0</td><td>0</td><td></td><td>65ms</td></tr><tr><td>最大请求响应</td><td>0</td><td>0</td><td></td><td>61621ms</td></tr><tr><td>网卡I/O流量</td><td></td><td></td><td>入49.5/min，91.5/min；出56.2/min，106.8/min</td><td></td></tr><tr><td>磁盘I/O负载</td><td></td><td></td><td>读平均：0，写平均：5611，写峰值：7961</td><td></td></tr><tr><td>内存使用情况</td><td>平均12.7，峰值14.4</td><td></td><td>平均54，峰值57.2</td><td></td></tr><tr><td>CPU使用情况</td><td>平均3，峰值11</td><td></td><td>平均33，峰值40</td><td></td></tr></tbody></table><h4 id="（2）数据库"><a href="#（2）数据库" class="headerlink" title="（2）数据库"></a>（2）数据库</h4><table><thead><tr><th></th><th>FMHA</th><th>CTSDB</th></tr></thead><tbody><tr><td>当前数据容量</td><td>50-60G</td><td>3T * 7 =21T，470亿</td></tr><tr><td>每天数据增量</td><td></td><td>1.5T * 2 = 3T，66亿</td></tr><tr><td>读峰值/s</td><td>494</td><td>11/min，2/s</td></tr><tr><td>写峰值/s</td><td>290</td><td>10.7w / min</td></tr></tbody></table><h4 id="（3）缓存"><a href="#（3）缓存" class="headerlink" title="（3）缓存"></a>（3）缓存</h4><table><thead><tr><th></th><th>CKV+</th></tr></thead><tbody><tr><td>缓存内容大小</td><td>15-20G</td></tr><tr><td>缓存内容数量</td><td></td></tr><tr><td>缓存过期时间</td><td>30min/24h</td></tr><tr><td>缓存数据结构</td><td>list，set</td></tr><tr><td>读峰值/s</td><td>7985253/min，13.3w/s</td></tr><tr><td>写峰值/s</td><td>7985253/min，13.3w/s</td></tr><tr><td>连接数限制</td><td>2w</td></tr><tr><td>备shard</td><td>不可读，1副本</td></tr></tbody></table><h4 id="（4）消息队列"><a href="#（4）消息队列" class="headerlink" title="（4）消息队列"></a>（4）消息队列</h4><table><thead><tr><th></th><th>kafka</th></tr></thead><tbody><tr><td>每天平均数据增量</td><td>80亿</td></tr><tr><td>消息持久的过期时间</td><td>3天</td></tr><tr><td>读峰值/s</td><td></td></tr><tr><td>写峰值/s</td><td></td></tr><tr><td>每条消息大小</td><td>0.14k</td></tr><tr><td>平均延迟</td><td></td></tr><tr><td>最大延迟</td><td></td></tr></tbody></table><h2 id="3-容错"><a href="#3-容错" class="headerlink" title="3. 容错"></a>3. 容错</h2><p>发生故障时，系统还能继续运行</p><h2 id="4-可伸缩性"><a href="#4-可伸缩性" class="headerlink" title="4. 可伸缩性"></a>4. 可伸缩性</h2><p>kafka：增加分片，broker进入/退出<br>writer：增加进程，提高模块线程数，限速<br>CTSDB：增加副本，node进入/退出</p><h2 id="5-性能"><a href="#5-性能" class="headerlink" title="5. 性能"></a>5. 性能</h2><h4 id="（1）性能测试"><a href="#（1）性能测试" class="headerlink" title="（1）性能测试"></a>（1）性能测试</h4><p>响应时间 + 并发数 + 吞吐量<br>吞吐量 = （ 1000 / 响应时间ms ) * 并发数</p><h4 id="（2）影响性能因素"><a href="#（2）影响性能因素" class="headerlink" title="（2）影响性能因素"></a>（2）影响性能因素</h4><h5 id="硬盘"><a href="#硬盘" class="headerlink" title="硬盘"></a>硬盘</h5><ul><li>cpu：48核 =》 线程数</li><li>内存：128G</li><li>磁盘IO</li><li>网络</li></ul><h5 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h5><ul><li>数据库<ul><li>内存，CPU计算，磁盘读写</li><li>可以改为使用缓存</li></ul></li><li>锁竞争<ul><li>上下文切换，性能开销</li><li>请求堆积，影响性能</li></ul></li><li>异常：异常抛出需要构建异常栈，捕获和处理，消耗系统性能</li></ul><h4 id="（3）-优化策略"><a href="#（3）-优化策略" class="headerlink" title="（3） 优化策略"></a>（3） 优化策略</h4><ul><li>优化代码：数据结构；设计；算法；空间换时间</li><li>参数调优：JVM，线程池，连接池</li><li>硬盘：合理设置线程数</li><li>软件：缓存，减少锁</li><li>兜底：限流，降级，熔断</li></ul><h4 id="（4）实际"><a href="#（4）实际" class="headerlink" title="（4）实际"></a>（4）实际</h4><h5 id="拉取"><a href="#拉取" class="headerlink" title="拉取"></a>拉取</h5><ul><li>api升级<ul><li>批量拉取，提高并发</li><li>心跳线程，防止频繁rebalance</li><li>批次，批量大小</li><li>offset存在zk，改为，offset存在topic，提高性能</li></ul></li><li>限流：设定限额，根据CTSDB处理能力</li><li>熔断：queue写入失败，熔断器</li></ul><h5 id="处理"><a href="#处理" class="headerlink" title="处理"></a>处理</h5><ul><li>线程分配</li><li>缓存，减少db压力</li></ul><h5 id="缓存"><a href="#缓存" class="headerlink" title="缓存"></a>缓存</h5><ul><li>线程池</li><li>连接池</li></ul><h5 id="计算"><a href="#计算" class="headerlink" title="计算"></a>计算</h5><ul><li>连接池</li><li>去掉加锁，列表拆分</li></ul><h5 id="写入"><a href="#写入" class="headerlink" title="写入"></a>写入</h5><ul><li>批量写入</li><li>一边累计，一边发送，并发度</li><li>限流：令牌桶</li></ul><h5 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h5><ul><li>令牌桶，限流</li><li>超过，考虑增加熔断器，蓄水池等等</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-系统要求&quot;&gt;&lt;a href=&quot;#1-系统要求&quot; class=&quot;headerlink&quot; title=&quot;1. 系统要求&quot;&gt;&lt;/a&gt;1. 系统要求&lt;/h2&gt;&lt;h4 id=&quot;（1）逻辑耦合低&quot;&gt;&lt;a href=&quot;#（1）逻辑耦合低&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="模调" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E6%A8%A1%E8%B0%83/"/>
    
    
    <category term="trace" scheme="http://example.com/tags/trace/"/>
    
  </entry>
  
  <entry>
    <title>oop原则 &amp; cap原理</title>
    <link href="http://example.com/2021/11/10/oop/"/>
    <id>http://example.com/2021/11/10/oop/</id>
    <published>2021-11-10T05:01:44.000Z</published>
    <updated>2021-11-10T14:55:50.848Z</updated>
    
    <content type="html"><![CDATA[<h1 id="oop：Object-Oriented-Programming-面向对象编程"><a href="#oop：Object-Oriented-Programming-面向对象编程" class="headerlink" title="oop：Object Oriented Programming 面向对象编程"></a>oop：Object Oriented Programming 面向对象编程</h1><h2 id="1-单一职责"><a href="#1-单一职责" class="headerlink" title="1. 单一职责"></a>1. 单一职责</h2><p>功能专一，易于复用和重构</p><h2 id="2-开闭原则"><a href="#2-开闭原则" class="headerlink" title="2. 开闭原则"></a>2. 开闭原则</h2><p>在类的设计理念，哪些行为是允许的，哪些行为是不允许的<br>达到类可维护，可扩展，可复用的目的</p><h2 id="3-里式替换"><a href="#3-里式替换" class="headerlink" title="3. 里式替换"></a>3. 里式替换</h2><p>在类的设计中，子类型必须能够替换父类型</p><h2 id="4-依赖倒置"><a href="#4-依赖倒置" class="headerlink" title="4. 依赖倒置"></a>4. 依赖倒置</h2><p>在类的设计上，应当面向接口编程，而不是面向实现<br>高层模块不应该依赖底层模块，两者应该依赖其抽象<br>抽象不应该依赖细节，细节应该依赖抽象</p><h2 id="5-接口隔离"><a href="#5-接口隔离" class="headerlink" title="5. 接口隔离"></a>5. 接口隔离</h2><p>在接口设计中，应当杜绝不必要的接口</p><h2 id="6-迪米特法则"><a href="#6-迪米特法则" class="headerlink" title="6. 迪米特法则"></a>6. 迪米特法则</h2><p>在类的设计中，调用类不需要知道被调用类的内部实现或者具体的实例对象</p><h1 id="CAP原理"><a href="#CAP原理" class="headerlink" title="CAP原理"></a>CAP原理</h1><p>分布式系统中</p><ul><li>Consistency一致性</li><li>Availability可用性，</li><li>Partition tolerance容错性</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;oop：Object-Oriented-Programming-面向对象编程&quot;&gt;&lt;a href=&quot;#oop：Object-Oriented-Programming-面向对象编程&quot; class=&quot;headerlink&quot; title=&quot;oop：Object Orien</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="原理" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%8E%9F%E7%90%86/"/>
    
    
    <category term="oop" scheme="http://example.com/tags/oop/"/>
    
    <category term="cap" scheme="http://example.com/tags/cap/"/>
    
  </entry>
  
  <entry>
    <title>other-trace-systems</title>
    <link href="http://example.com/2021/11/09/other-trace-systems/"/>
    <id>http://example.com/2021/11/09/other-trace-systems/</id>
    <published>2021-11-09T13:24:32.000Z</published>
    <updated>2021-11-09T13:46:57.521Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-业界其他"><a href="#1-业界其他" class="headerlink" title="1. 业界其他"></a>1. 业界其他</h2><h4 id="（1）zipkin"><a href="#（1）zipkin" class="headerlink" title="（1）zipkin"></a>（1）zipkin</h4><p>公司：Twitter</p><p>缺点：</p><ul><li>基于java开发，不支持C++</li><li>http上报，消耗性能</li><li>拦截请求，入侵强</li><li>支持trace，不支持监控告警</li></ul><h4 id="（2）鹰眼"><a href="#（2）鹰眼" class="headerlink" title="（2）鹰眼"></a>（2）鹰眼</h4><p>公司：阿里<br>特单：存储在HBASE<br>缺点：不开源</p><h4 id="（3）Pinpoint"><a href="#（3）Pinpoint" class="headerlink" title="（3）Pinpoint"></a>（3）Pinpoint</h4><p>公司：韩国</p><p>优点：</p><ul><li>字节码注入，无侵入</li><li>存储使用hbase</li></ul><p>缺点：</p><ul><li>仅支持java服务，不支持C++</li><li>不支持查询单个调用链</li><li>不兼容OpenTracing</li><li>不支持trace</li></ul><h4 id="（4）CAT"><a href="#（4）CAT" class="headerlink" title="（4）CAT"></a>（4）CAT</h4><p>公司：美团</p><p>优点：基于JAVA开发，支持多种语言</p><p>缺点：</p><ul><li>埋点，代码入侵强</li><li>文档少，资料混乱</li><li>停止维护</li></ul><h4 id="（5）Dapper"><a href="#（5）Dapper" class="headerlink" title="（5）Dapper"></a>（5）Dapper</h4><p>公司：谷歌<br>缺点：不开源</p><h4 id="（6）Opencensus"><a href="#（6）Opencensus" class="headerlink" title="（6）Opencensus"></a>（6）Opencensus</h4><p>公司：谷歌</p><p>优点：开源</p><p>缺点：</p><ul><li>无架构梳理</li><li>不支持日志</li><li>基于agent/controller，依赖重，耦合度高，灵活度低</li></ul><h4 id="（7）skywalking"><a href="#（7）skywalking" class="headerlink" title="（7）skywalking"></a>（7）skywalking</h4><p>公司：华为</p><p>优点：</p><ul><li>JAVA字节码注入，无侵入</li><li>兼容OpenTracing</li></ul><p>缺点：</p><ul><li>依赖多</li><li>不支持C++</li></ul><h4 id="（8）Jaeger"><a href="#（8）Jaeger" class="headerlink" title="（8）Jaeger"></a>（8）Jaeger</h4><p>公司：Uber</p><p>优点：</p><ul><li>支持多种语言，golang开发</li><li>兼容OpenTracing</li></ul><p>缺点：</p><ul><li>拦截请求，入侵强</li><li>支持trace，不支持监控告警</li></ul><h4 id="（9）clickhouse"><a href="#（9）clickhouse" class="headerlink" title="（9）clickhouse"></a>（9）clickhouse</h4><p>介绍：面向列的数据库管理系统，用于在线分析查询</p><p>优点</p><ul><li>开源</li><li>查询速度快</li><li>容错性高</li><li>可靠性强</li><li>扩展性高</li><li>易用性高</li><li>支持SQL，在线查询，近似计算</li></ul><p>缺点</p><ul><li>不支持事务</li><li>修改/删除支持差</li></ul><h2 id="2-公司内部"><a href="#2-公司内部" class="headerlink" title="2. 公司内部"></a>2. 公司内部</h2><h4 id="（1）-天机阁1-0"><a href="#（1）-天机阁1-0" class="headerlink" title="（1） 天机阁1.0"></a>（1） 天机阁1.0</h4><ul><li>zipkin协议 + 鹰眼架构</li><li>需要SDK和agent，外部依赖重</li><li>只有trace，无log和metric</li><li>数据延迟60s</li><li>不支持私有化</li><li>不支持多租户</li></ul><h4 id="（2）-天机阁2-0"><a href="#（2）-天机阁2-0" class="headerlink" title="（2） 天机阁2.0"></a>（2） 天机阁2.0</h4><ul><li>2020年底上线</li><li>IP相关需要自行扩展</li><li>数据不标准，需要特殊处理</li><li>安全性/主题区分需要考虑</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-业界其他&quot;&gt;&lt;a href=&quot;#1-业界其他&quot; class=&quot;headerlink&quot; title=&quot;1. 业界其他&quot;&gt;&lt;/a&gt;1. 业界其他&lt;/h2&gt;&lt;h4 id=&quot;（1）zipkin&quot;&gt;&lt;a href=&quot;#（1）zipkin&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="模调" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E6%A8%A1%E8%B0%83/"/>
    
    
    <category term="trace" scheme="http://example.com/tags/trace/"/>
    
    <category term="system" scheme="http://example.com/tags/system/"/>
    
  </entry>
  
  <entry>
    <title>FMHA</title>
    <link href="http://example.com/2021/11/09/FMHA/"/>
    <id>http://example.com/2021/11/09/FMHA/</id>
    <published>2021-11-09T13:24:23.000Z</published>
    <updated>2021-11-09T13:30:26.452Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-一主三备"><a href="#1-一主三备" class="headerlink" title="1. 一主三备"></a>1. 一主三备</h2><p>主：锦绣<br>备：锦绣 + 荔景 + 光明</p><h2 id="2-复制类型"><a href="#2-复制类型" class="headerlink" title="2. 复制类型"></a>2. 复制类型</h2><p>同步/半同步</p><h2 id="3-容灾"><a href="#3-容灾" class="headerlink" title="3. 容灾"></a>3. 容灾</h2><p>强容灾</p><h2 id="4-卡主修复"><a href="#4-卡主修复" class="headerlink" title="4. 卡主修复"></a>4. 卡主修复</h2><p>关闭：直接切换主备<br>开启：异步复制，容易出现单点故障，导致数据丢失</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-一主三备&quot;&gt;&lt;a href=&quot;#1-一主三备&quot; class=&quot;headerlink&quot; title=&quot;1. 一主三备&quot;&gt;&lt;/a&gt;1. 一主三备&lt;/h2&gt;&lt;p&gt;主：锦绣&lt;br&gt;备：锦绣 + 荔景 + 光明&lt;/p&gt;
&lt;h2 id=&quot;2-复制类型&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="数据库" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="db" scheme="http://example.com/tags/db/"/>
    
  </entry>
  
  <entry>
    <title>CTSDB查询优化</title>
    <link href="http://example.com/2021/11/09/CTSDB%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/"/>
    <id>http://example.com/2021/11/09/CTSDB%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/</id>
    <published>2021-11-09T13:24:09.000Z</published>
    <updated>2021-11-09T13:28:33.727Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-from-size"><a href="#1-from-size" class="headerlink" title="1. from/size"></a>1. from/size</h2><p>避免分页深度</p><h2 id="2-实时聚合-》-rollup"><a href="#2-实时聚合-》-rollup" class="headerlink" title="2. 实时聚合 =》 rollup"></a>2. 实时聚合 =》 rollup</h2><p>实时聚合影响：内存占用，分桶多的数据</p><h2 id="3-排序优化"><a href="#3-排序优化" class="headerlink" title="3. 排序优化"></a>3. 排序优化</h2><ul><li>index sorting，docID和indexSorting的顺序一致</li><li>遍历 =》 提前中断</li><li>降低了写入性能</li><li>提高了查询性能<ul><li>预排序 + after key + 提前中断</li><li>数据压缩率</li></ul></li></ul><h2 id="4-查询剪枝"><a href="#4-查询剪枝" class="headerlink" title="4. 查询剪枝"></a>4. 查询剪枝</h2><p>segment，最大值最小值<br>遍历 =》 跳过</p><h2 id="5-routing"><a href="#5-routing" class="headerlink" title="5. routing"></a>5. routing</h2><p>一次聚合 + 分片级并发</p><h2 id="6-rollup"><a href="#6-rollup" class="headerlink" title="6. rollup"></a>6. rollup</h2><p>流式聚合（并发分页）<br>indexSorting（提前中断）<br>查询剪枝<br>routing（分片级并发）</p><h2 id="7-composite"><a href="#7-composite" class="headerlink" title="7. composite"></a>7. composite</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-from-size&quot;&gt;&lt;a href=&quot;#1-from-size&quot; class=&quot;headerlink&quot; title=&quot;1. from/size&quot;&gt;&lt;/a&gt;1. from/size&lt;/h2&gt;&lt;p&gt;避免分页深度&lt;/p&gt;
&lt;h2 id=&quot;2-实时聚合-》-roll</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="大数据" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="ctsdb" scheme="http://example.com/tags/ctsdb/"/>
    
    <category term="search" scheme="http://example.com/tags/search/"/>
    
  </entry>
  
  <entry>
    <title>权限 &amp; 数据安全</title>
    <link href="http://example.com/2021/11/09/%E6%9D%83%E9%99%90-%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8/"/>
    <id>http://example.com/2021/11/09/%E6%9D%83%E9%99%90-%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8/</id>
    <published>2021-11-09T13:18:01.000Z</published>
    <updated>2021-11-10T14:20:32.287Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-权限"><a href="#1-权限" class="headerlink" title="1. 权限"></a>1. 权限</h2><ul><li>web：权限系统</li><li>openapi：鉴权系统 + 配置</li><li>CTSDB：用户名密码</li><li>CKV+：用户名密码</li><li>FMHA：强密码</li></ul><h2 id="2-安全"><a href="#2-安全" class="headerlink" title="2. 安全"></a>2. 安全</h2><h4 id="（1）存储安全"><a href="#（1）存储安全" class="headerlink" title="（1）存储安全"></a>（1）存储安全</h4><ul><li>kafka<ul><li>副本 + leader</li><li>加密（SSL，影响性能） + 身份验证 + 授权</li></ul></li><li>ctsdb<ul><li>副本 + 选举</li><li>密码 + VPC网络隔离</li><li>身份认证 + 用户鉴权</li></ul></li><li>FMHA<ul><li>一地三中心</li><li>密码 + 防火墙</li><li>半同步 + GTID + read_only</li></ul></li><li>ckv+<ul><li>数据同步：异步 + 强一致</li><li>数据备份：本地快照 + 冷备</li><li>副本分片：主备切换</li></ul></li></ul><h4 id="（2）信息安全"><a href="#（2）信息安全" class="headerlink" title="（2）信息安全"></a>（2）信息安全</h4><p>数据隔离：权限<br>环境：部署<br>事后审计</p><h4 id="（3）传输安全"><a href="#（3）传输安全" class="headerlink" title="（3）传输安全"></a>（3）传输安全</h4><p>kafka：加密 + SSL<br>FMHA：加密<br>CTSDB：内部TLS + 外部HTTPS<br>ckv+：无</p><h4 id="（4）数据泄露措施"><a href="#（4）数据泄露措施" class="headerlink" title="（4）数据泄露措施"></a>（4）数据泄露措施</h4><ul><li>冻结设备，断网</li><li>开启日志记录，开启审计</li><li>修改密码</li><li>确定数据泄露影响</li><li>检查防火墙/子网隔离/杀毒软件/告警</li><li>及时汇报</li><li>发布公告</li></ul><h4 id="（5）数据库防篡改"><a href="#（5）数据库防篡改" class="headerlink" title="（5）数据库防篡改"></a>（5）数据库防篡改</h4><ul><li>开启数据库log日志记录功能</li><li>开启端口的安全策略，限制对外开放</li><li>账户管理，授权</li><li>数字签名</li><li>防火墙</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-权限&quot;&gt;&lt;a href=&quot;#1-权限&quot; class=&quot;headerlink&quot; title=&quot;1. 权限&quot;&gt;&lt;/a&gt;1. 权限&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;web：权限系统&lt;/li&gt;
&lt;li&gt;openapi：鉴权系统 + 配置&lt;/li&gt;
&lt;li&gt;CTSDB：用户名</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="安全" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%AE%89%E5%85%A8/"/>
    
    
    <category term="auth" scheme="http://example.com/tags/auth/"/>
    
    <category term="data-safe" scheme="http://example.com/tags/data-safe/"/>
    
  </entry>
  
  <entry>
    <title>慢查询 &amp; 限流 &amp; 限频</title>
    <link href="http://example.com/2021/11/09/search/"/>
    <id>http://example.com/2021/11/09/search/</id>
    <published>2021-11-09T13:09:20.000Z</published>
    <updated>2021-11-09T13:16:26.582Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-慢查询"><a href="#1-慢查询" class="headerlink" title="1. 慢查询"></a>1. 慢查询</h2><h4 id="（1）ctsdb：30s超时"><a href="#（1）ctsdb：30s超时" class="headerlink" title="（1）ctsdb：30s超时"></a>（1）ctsdb：30s超时</h4><p>影响：CPU，内存</p><p>优化：</p><ul><li>索引，不用通配符</li><li>agg改成composite</li><li>分片数据</li><li>聚合拆分成多个，避免分桶太多</li><li>独立协调节点</li><li>routing</li><li>增加刷新间隔</li><li>配置熔断：内存限制</li></ul><h4 id="（2）fmha"><a href="#（2）fmha" class="headerlink" title="（2）fmha"></a>（2）fmha</h4><p>影响：session长期占用，cpu、内存升高，可用性降低</p><p>优化：</p><ul><li>主键</li><li>索引减少like</li><li>拆表/中间表</li><li>查询分解</li><li>limit优化</li></ul><h2 id="2-限流"><a href="#2-限流" class="headerlink" title="2. 限流"></a>2. 限流</h2><h4 id="（1）接口限流"><a href="#（1）接口限流" class="headerlink" title="（1）接口限流"></a>（1）接口限流</h4><ul><li>计数算法：简单</li><li>滑动窗口：存储空间大</li><li>漏桶算法</li><li>令牌桶：允许一定程度的并发</li></ul><h4 id="（2）数据上报限流"><a href="#（2）数据上报限流" class="headerlink" title="（2）数据上报限流"></a>（2）数据上报限流</h4><p>writer：</p><ul><li>RateLimiter，令牌桶</li><li>2w/s/线程</li></ul><p>processor：</p><ul><li>writer queue满了，熔断，蓄水池</li><li>恢复，writer queue</li><li>蓄水池，writer queue</li></ul><p>Loader：</p><ul><li>LoadQuata，数值判断大小</li><li>6w/s/线程</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-慢查询&quot;&gt;&lt;a href=&quot;#1-慢查询&quot; class=&quot;headerlink&quot; title=&quot;1. 慢查询&quot;&gt;&lt;/a&gt;1. 慢查询&lt;/h2&gt;&lt;h4 id=&quot;（1）ctsdb：30s超时&quot;&gt;&lt;a href=&quot;#（1）ctsdb：30s超时&quot; class=&quot;he</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="其他" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%85%B6%E4%BB%96/"/>
    
    
    <category term="search" scheme="http://example.com/tags/search/"/>
    
    <category term="server" scheme="http://example.com/tags/server/"/>
    
  </entry>
  
  <entry>
    <title>OMS-GATEWAY</title>
    <link href="http://example.com/2021/11/09/oms/"/>
    <id>http://example.com/2021/11/09/oms/</id>
    <published>2021-11-09T13:02:40.000Z</published>
    <updated>2021-11-09T13:08:24.912Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-架构"><a href="#1-架构" class="headerlink" title="1. 架构"></a>1. 架构</h2><p>oms-api：oms协议的封装<br>oms-gateway：网关，服务发现，负载均衡，统一鉴权<br>oms应用框架：子服务框架，oms协议，服务发现协议</p><h2 id="2-容灾"><a href="#2-容灾" class="headerlink" title="2. 容灾"></a>2. 容灾</h2><h4 id="（1）自身集群"><a href="#（1）自身集群" class="headerlink" title="（1）自身集群"></a>（1）自身集群</h4><p>L5访问网关，网关切换，域名<br>集群，多机器组成，同步子服务信息</p><h4 id="（2）子服务"><a href="#（2）子服务" class="headerlink" title="（2）子服务"></a>（2）子服务</h4><ul><li>子服务信息保存在内存中</li><li>同步协议，同步子服务信息到其他网关机器中</li><li>子服务同步其他子服务信息到本地</li><li>网关检查子服务上报的心跳，剔除</li><li>客户端缓存</li></ul><h2 id="3-路由"><a href="#3-路由" class="headerlink" title="3. 路由"></a>3. 路由</h2><h4 id="（1）就近路由"><a href="#（1）就近路由" class="headerlink" title="（1）就近路由"></a>（1）就近路由</h4><p>根据网关所在机房，相同地理信息的子服务<br>负载均衡，轮询选择IP</p><h4 id="（2）指定机房路由"><a href="#（2）指定机房路由" class="headerlink" title="（2）指定机房路由"></a>（2）指定机房路由</h4><h2 id="4-鉴权"><a href="#4-鉴权" class="headerlink" title="4. 鉴权"></a>4. 鉴权</h2><p>权限控制：统一鉴权中心 + 配置（白名单，人工）<br>客户端身份的鉴定 + 被访问服务的权限控制<br>网关对子服务鉴权，agent</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-架构&quot;&gt;&lt;a href=&quot;#1-架构&quot; class=&quot;headerlink&quot; title=&quot;1. 架构&quot;&gt;&lt;/a&gt;1. 架构&lt;/h2&gt;&lt;p&gt;oms-api：oms协议的封装&lt;br&gt;oms-gateway：网关，服务发现，负载均衡，统一鉴权&lt;br&gt;oms应用框架</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="OMS" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/OMS/"/>
    
    
    <category term="oms" scheme="http://example.com/tags/oms/"/>
    
  </entry>
  
  <entry>
    <title>cftologserver</title>
    <link href="http://example.com/2021/11/09/cftologserver/"/>
    <id>http://example.com/2021/11/09/cftologserver/</id>
    <published>2021-11-09T12:56:11.000Z</published>
    <updated>2021-11-09T13:02:28.279Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-模块化"><a href="#1-模块化" class="headerlink" title="1. 模块化"></a>1. 模块化</h2><h4 id="（1）五个模块"><a href="#（1）五个模块" class="headerlink" title="（1）五个模块"></a>（1）五个模块</h4><h4 id="（2）资源配置"><a href="#（2）资源配置" class="headerlink" title="（2）资源配置"></a>（2）资源配置</h4><p>kafka集群：深圳 + 上海<br>消费者：分片16<br>cacher：ThreadPoolExecutor，100个线程，2000个无界队列<br>processor：每个尾号一个线程（尾号hash % 线程数）<br>writer：1/分片 + 1/processor</p><h4 id="（3）机器说明"><a href="#（3）机器说明" class="headerlink" title="（3）机器说明"></a>（3）机器说明</h4><p>B70<br>内存：125G，16G * 8 = 128G<br>硬盘：300G<br>物理CPU：2<br>核数：12<br>逻辑CPU：48（2 * 12 *2）<br>CPU Mhz：2301.00<br>RAID：RAID1<br>网络：10GE * 2，10G以太网网络</p><h2 id="2-线程池"><a href="#2-线程池" class="headerlink" title="2. 线程池"></a>2. 线程池</h2><h4 id="（1）作用"><a href="#（1）作用" class="headerlink" title="（1）作用"></a>（1）作用</h4><p>降低资源消耗<br>提高系统运行速度<br>提高可管理性</p><h4 id="（2）使用"><a href="#（2）使用" class="headerlink" title="（2）使用"></a>（2）使用</h4><p>ThreadPoolExecutor<br>核心线程池：100<br>阻塞队列：ArrayBlockingQueue，2000<br>线程池：200<br>饱和策略：DiscardPolicy</p><h2 id="3-缓存"><a href="#3-缓存" class="headerlink" title="3. 缓存"></a>3. 缓存</h2><p>同步锁，synchronized，多线程环境，线程安全同步锁</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-模块化&quot;&gt;&lt;a href=&quot;#1-模块化&quot; class=&quot;headerlink&quot; title=&quot;1. 模块化&quot;&gt;&lt;/a&gt;1. 模块化&lt;/h2&gt;&lt;h4 id=&quot;（1）五个模块&quot;&gt;&lt;a href=&quot;#（1）五个模块&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="日志服务" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="log" scheme="http://example.com/tags/log/"/>
    
  </entry>
  
  <entry>
    <title>ckv+ &amp; ckv &amp; redis</title>
    <link href="http://example.com/2021/11/09/cache/"/>
    <id>http://example.com/2021/11/09/cache/</id>
    <published>2021-11-09T12:41:16.000Z</published>
    <updated>2021-11-09T12:54:35.251Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-CKV"><a href="#1-CKV" class="headerlink" title="1. CKV+"></a>1. CKV+</h2><h4 id="（1）多数据结构"><a href="#（1）多数据结构" class="headerlink" title="（1）多数据结构"></a>（1）多数据结构</h4><p>string，list，zset等等</p><h4 id="（2）并发处理"><a href="#（2）并发处理" class="headerlink" title="（2）并发处理"></a>（2）并发处理</h4><p>单进程，多线程<br>一个分片绑定一个CPU，避免加锁</p><ul><li>网络IO，编解码，分给所有CPU</li><li>数据执行，分片ID指定的CPU</li></ul><h4 id="（3）强一致同步"><a href="#（3）强一致同步" class="headerlink" title="（3）强一致同步"></a>（3）强一致同步</h4><p>raft协议 + 冷备</p><h4 id="（4）多协议支持"><a href="#（4）多协议支持" class="headerlink" title="（4）多协议支持"></a>（4）多协议支持</h4><p>redis + memcache</p><h4 id="（5）冷热分离"><a href="#（5）冷热分离" class="headerlink" title="（5）冷热分离"></a>（5）冷热分离</h4><p>不支持</p><h4 id="（6）读写性能"><a href="#（6）读写性能" class="headerlink" title="（6）读写性能"></a>（6）读写性能</h4><p>多核，多线程<br>一个分片一个CPU，避免加锁<br>CPU对应独立的处理进程<br>网络IO和编解码，使用所有的CPU<br>数据执行，使用分片ID指定的CPU</p><h4 id="（7）限制"><a href="#（7）限制" class="headerlink" title="（7）限制"></a>（7）限制</h4><p>key，最大64k<br>value，最大32M</p><h4 id="（8）内存使用率"><a href="#（8）内存使用率" class="headerlink" title="（8）内存使用率"></a>（8）内存使用率</h4><p>多规格block + 动态分配page</p><h2 id="2-CKV"><a href="#2-CKV" class="headerlink" title="2. CKV"></a>2. CKV</h2><h4 id="（1）多数据结构-1"><a href="#（1）多数据结构-1" class="headerlink" title="（1）多数据结构"></a>（1）多数据结构</h4><p>只支持string</p><h4 id="（2）并发处理-1"><a href="#（2）并发处理-1" class="headerlink" title="（2）并发处理"></a>（2）并发处理</h4><p>多进程加锁</p><h4 id="（3）强一致同步-1"><a href="#（3）强一致同步-1" class="headerlink" title="（3）强一致同步"></a>（3）强一致同步</h4><p>不支持<br>其他同步:recover恢复中心</p><h4 id="（4）多协议支持-1"><a href="#（4）多协议支持-1" class="headerlink" title="（4）多协议支持"></a>（4）多协议支持</h4><p>memcache</p><h4 id="（5）冷热分离-1"><a href="#（5）冷热分离-1" class="headerlink" title="（5）冷热分离"></a>（5）冷热分离</h4><p>热数据系统,CMEM<br>冷数据系统，SSD</p><h4 id="（6）读写性能-1"><a href="#（6）读写性能-1" class="headerlink" title="（6）读写性能"></a>（6）读写性能</h4><p>网络IO与核心流程解耦<br>多进程<br>逻辑处理，进程间加锁（毛刺）</p><h4 id="（7）限制-1"><a href="#（7）限制-1" class="headerlink" title="（7）限制"></a>（7）限制</h4><p>key，2-10bytes<br>value，最大10M，最好小于1M</p><h4 id="（8）内存使用率-1"><a href="#（8）内存使用率-1" class="headerlink" title="（8）内存使用率"></a>（8）内存使用率</h4><p>和obj_size业务平均记录大小有关<br>业务记录大小分布越集中，碎片率越低</p><h2 id="3-Redis"><a href="#3-Redis" class="headerlink" title="3. Redis"></a>3. Redis</h2><h4 id="（1）多数据结构-2"><a href="#（1）多数据结构-2" class="headerlink" title="（1）多数据结构"></a>（1）多数据结构</h4><p>string，list，zset等等</p><h4 id="（2）并发处理-2"><a href="#（2）并发处理-2" class="headerlink" title="（2）并发处理"></a>（2）并发处理</h4><p>多线程，2020年下推出<br>网络IO多线程</p><h4 id="（3）强一致同步-2"><a href="#（3）强一致同步-2" class="headerlink" title="（3）强一致同步"></a>（3）强一致同步</h4><p>不支持，只有异步复制</p><h4 id="（4）多协议支持-2"><a href="#（4）多协议支持-2" class="headerlink" title="（4）多协议支持"></a>（4）多协议支持</h4><h4 id="（5）冷热分离-2"><a href="#（5）冷热分离-2" class="headerlink" title="（5）冷热分离"></a>（5）冷热分离</h4><p>不支持</p><h4 id="（6）读写性能-2"><a href="#（6）读写性能-2" class="headerlink" title="（6）读写性能"></a>（6）读写性能</h4><p>非阻塞IO + IO多路复用<br>单线程 + 队列技术 + hash数据结构</p><h4 id="（7）限制-2"><a href="#（7）限制-2" class="headerlink" title="（7）限制"></a>（7）限制</h4><p>value，1GB</p><h4 id="（8）内存使用率-2"><a href="#（8）内存使用率-2" class="headerlink" title="（8）内存使用率"></a>（8）内存使用率</h4><p>LRU,TTL,腾出空间</p><ul><li>过期键删除，释放空间无法充分利用</li></ul><p>分布式存储，槽机制</p><ul><li>缩短key，value长度</li><li>序列化</li><li>数据对齐</li><li>安全重启</li></ul><p>固定范围的内存块分配：小，大，巨大<br>每个范围又被划分成多个小的内存块单位</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-CKV&quot;&gt;&lt;a href=&quot;#1-CKV&quot; class=&quot;headerlink&quot; title=&quot;1. CKV+&quot;&gt;&lt;/a&gt;1. CKV+&lt;/h2&gt;&lt;h4 id=&quot;（1）多数据结构&quot;&gt;&lt;a href=&quot;#（1）多数据结构&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="缓存" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E7%BC%93%E5%AD%98/"/>
    
    
    <category term="cache" scheme="http://example.com/tags/cache/"/>
    
  </entry>
  
  <entry>
    <title>flink &amp; spark &amp; storm &amp; oceanus &amp; 缓存</title>
    <link href="http://example.com/2021/11/09/stream-computing/"/>
    <id>http://example.com/2021/11/09/stream-computing/</id>
    <published>2021-11-09T12:32:37.000Z</published>
    <updated>2021-11-09T12:40:00.999Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-flink"><a href="#1-flink" class="headerlink" title="1. flink"></a>1. flink</h2><p>流式模型：原生流处理，一条一条处理<br>数据处理保证：高，有且仅有一次，检查点机制<br>容错性：中等，checkpoint，快照<br>容错开销：低，小批量数据（轻量级，不阻塞流，checkpoint异步，不影响吞吐量）<br>延时：低，一条一条处理<br>吞吐量：高，缓存块 + 超时值</p><h2 id="2-spark"><a href="#2-spark" class="headerlink" title="2. spark"></a>2. spark</h2><p>流式模型：微批处理<br>数据处理保证：高，有且仅有一次，重新计算<br>容错性：高，RDD checkpoint（弹性分布式数据集）（通过整个数据集的计算流程的血缘关系实现重建）<br>容错开销：中等（有状态计算需要额外的RDD维护状态，影响吞吐）<br>延时：中等，小批次处理<br>吞吐量：高，微批次</p><h2 id="3-storm"><a href="#3-storm" class="headerlink" title="3. storm"></a>3. storm</h2><p>流式模型：原生流处理<br>数据处理保证：中等，至少一次，重复<br>容错性：中等，上有数据备份 + ACK<br>容错开销：高，ACK（所有节点每个节点ACK一次，每条data都做ACK）<br>延时：低，一条一条处理<br>吞吐量：低，ACK，容错影响<br>易用性：低，遵循topology</p><h2 id="4-oceanus"><a href="#4-oceanus" class="headerlink" title="4. oceanus"></a>4. oceanus</h2><p>版本支持：外部最新1.13.2，内部还在1.0.9<br>特性支持：不足<br>运维：值班制度<br>其他：小bug多</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-flink&quot;&gt;&lt;a href=&quot;#1-flink&quot; class=&quot;headerlink&quot; title=&quot;1. flink&quot;&gt;&lt;/a&gt;1. flink&lt;/h2&gt;&lt;p&gt;流式模型：原生流处理，一条一条处理&lt;br&gt;数据处理保证：高，有且仅有一次，检查点机制&lt;br&gt;容错</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="流式计算" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E6%B5%81%E5%BC%8F%E8%AE%A1%E7%AE%97/"/>
    
    
    <category term="stream-computing" scheme="http://example.com/tags/stream-computing/"/>
    
  </entry>
  
  <entry>
    <title>hermes &amp; es &amp; ces &amp; ctsdb</title>
    <link href="http://example.com/2021/11/09/hermes-es/"/>
    <id>http://example.com/2021/11/09/hermes-es/</id>
    <published>2021-11-09T12:22:30.000Z</published>
    <updated>2021-11-09T13:17:28.041Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-hermes"><a href="#1-hermes" class="headerlink" title="1. hermes"></a>1. hermes</h2><p>写入搜索性能：HDFS</p><h2 id="2-es"><a href="#2-es" class="headerlink" title="2. es"></a>2. es</h2><p>存储规模限制：集群管理成本，信息同步成本</p><p>写入搜索性能：本地磁盘</p><h2 id="3-ces"><a href="#3-ces" class="headerlink" title="3. ces"></a>3. ces</h2><p>存储规模：集群管理成本，信息同步成本</p><p>写入搜索性能：同CTSDB</p><p>特点：适合检索</p><h2 id="4-CTSDB"><a href="#4-CTSDB" class="headerlink" title="4. CTSDB"></a>4. CTSDB</h2><h4 id="（1）存储规模"><a href="#（1）存储规模" class="headerlink" title="（1）存储规模"></a>（1）存储规模</h4><p>集群大小，管理成本，集群元数据大同步慢</p><h4 id="（2）低成本存储"><a href="#（2）低成本存储" class="headerlink" title="（2）低成本存储"></a>（2）低成本存储</h4><p>编码压缩算法 + rollup + 过期时间</p><h4 id="（3）写入搜索性能"><a href="#（3）写入搜索性能" class="headerlink" title="（3）写入搜索性能"></a>（3）写入搜索性能</h4><ul><li>写入<ul><li>写入内存，之后再写入磁盘</li><li>文件裁剪优化</li></ul></li><li>查询<ul><li>缓存</li><li>倒排索引</li><li>存储模型，segment合并，按时间序分层合并</li><li>执行引擎优化，index sorting + after key + 提前中断</li><li>文件裁剪优化</li></ul></li></ul><h4 id="（4）时序特性"><a href="#（4）时序特性" class="headerlink" title="（4）时序特性"></a>（4）时序特性</h4><p>时序场景管理能力</p><ul><li>metric封装</li><li>按时间滚动生成子表</li><li>自动产生自动销毁</li><li>过期自动清理</li></ul><h4 id="（5）聚合"><a href="#（5）聚合" class="headerlink" title="（5）聚合"></a>（5）聚合</h4><p>rollup</p><ul><li>流式聚合（分页并发）</li><li>查询剪枝（segment）</li><li>index sorting（提前中断）</li><li>routing（分片级并发）</li></ul><h4 id="6-CTSDB-manager"><a href="#6-CTSDB-manager" class="headerlink" title="(6) CTSDB manager"></a>(6) CTSDB manager</h4><p>每个地域一个<br>功能：</p><ul><li>任务下发</li><li>index自动创建/删除</li><li>变配</li><li>监控</li><li>发货</li></ul><h4 id="（7）CTSDB-GATEWAY"><a href="#（7）CTSDB-GATEWAY" class="headerlink" title="（7）CTSDB-GATEWAY"></a>（7）CTSDB-GATEWAY</h4><p>VPC网络：安全性<br>VPC的VIP：负载均衡</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-hermes&quot;&gt;&lt;a href=&quot;#1-hermes&quot; class=&quot;headerlink&quot; title=&quot;1. hermes&quot;&gt;&lt;/a&gt;1. hermes&lt;/h2&gt;&lt;p&gt;写入搜索性能：HDFS&lt;/p&gt;
&lt;h2 id=&quot;2-es&quot;&gt;&lt;a href=&quot;#2-es</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="大数据" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="big-data" scheme="http://example.com/tags/big-data/"/>
    
  </entry>
  
  <entry>
    <title>TDW &amp; Hermes</title>
    <link href="http://example.com/2021/11/09/tdw-hermes/"/>
    <id>http://example.com/2021/11/09/tdw-hermes/</id>
    <published>2021-11-09T12:18:23.000Z</published>
    <updated>2021-11-09T12:21:14.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-经过三层存储"><a href="#1-经过三层存储" class="headerlink" title="1. 经过三层存储"></a>1. 经过三层存储</h2><h2 id="2-tdw性能差"><a href="#2-tdw性能差" class="headerlink" title="2. tdw性能差"></a>2. tdw性能差</h2><p>tdw基于hive，hdfs</p><h2 id="3-hermes性能差"><a href="#3-hermes性能差" class="headerlink" title="3. hermes性能差"></a>3. hermes性能差</h2><p>基于HDFS，比不上本地文件系统<br>tdw -&gt; hermes，LZ离线导入，提交MR任务构建索引，受资源池影响，还需要进行索引合并</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-经过三层存储&quot;&gt;&lt;a href=&quot;#1-经过三层存储&quot; class=&quot;headerlink&quot; title=&quot;1. 经过三层存储&quot;&gt;&lt;/a&gt;1. 经过三层存储&lt;/h2&gt;&lt;h2 id=&quot;2-tdw性能差&quot;&gt;&lt;a href=&quot;#2-tdw性能差&quot; class=&quot;he</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="大数据" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="big-data" scheme="http://example.com/tags/big-data/"/>
    
  </entry>
  
  <entry>
    <title>大数据处理平台对比</title>
    <link href="http://example.com/2021/11/09/big-data-compare/"/>
    <id>http://example.com/2021/11/09/big-data-compare/</id>
    <published>2021-11-09T04:51:15.000Z</published>
    <updated>2021-11-10T14:11:25.882Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-关系型数据库：mysql-postgre"><a href="#1-关系型数据库：mysql-postgre" class="headerlink" title="1. 关系型数据库：mysql + postgre"></a>1. 关系型数据库：mysql + postgre</h2><p>优点：</p><ul><li>稳定</li><li>简单</li><li>结构化数据</li></ul><p>缺点：</p><ul><li>存储成本大（时序数据压缩不佳）</li><li>维护成本高（人工分库分表）</li><li>写入吞吐低（磁盘IO + 索引建立）</li><li>查询性能差（磁盘IO + 索引建立）</li><li>聚合海量性能差（适合事务，不适合聚合）</li><li>数据规模支持小</li><li>难以横向扩展</li><li>postgre，聚合查询，容易出现性能瓶颈</li></ul><h2 id="2-非关系型数据库：mongodb"><a href="#2-非关系型数据库：mongodb" class="headerlink" title="2. 非关系型数据库：mongodb"></a>2. 非关系型数据库：mongodb</h2><p>优点</p><ul><li>查询功能强大</li><li>表结构灵活可变</li><li>删改数据方便</li><li>海量存储</li></ul><p>缺点</p><ul><li>多表查询、复杂事务等高级操作有阻碍</li><li>非分布式，难以横向扩容：集群配置，绑定分片、副本节点</li><li>字段搜索需要手动索引：B+ tree，最左优先</li><li>不适合大数据量查询：比不上ES的倒排索引（亿级）</li><li>不适合多表和复杂条件查询：创建B+树索引</li><li>不适合全文检索：字段个数有限制</li><li>不适合聚合：负责聚合通过MapReduce，速度慢</li></ul><p>和es的对比</p><ul><li>mongodb适合需要修改的数据，es适合不需要的</li><li>es查询/全文索引/聚合分析比mongodb强</li></ul><h2 id="3-druid，德鲁伊"><a href="#3-druid，德鲁伊" class="headerlink" title="3. druid，德鲁伊"></a>3. druid，德鲁伊</h2><p>介绍：分布式的，支持实时多维OLAP分析的数据处理系统<br>优点：</p><ul><li>适合聚合，快速扫描：列式存储，压缩的位图索引</li><li>可扩展的分布式系统：自我平衡，易于操作</li><li>支持数据规模大</li><li>支持实时或批量查询，秒级查询：列存压缩，位图索引，倒排索引，预聚合</li><li>基于时间的分区：提高时间数据性能</li></ul><p>缺点：</p><ul><li>支持基础的搜索，不支持全文搜索</li><li>核心功能rollup，rollup之后丢失明细数据</li><li>不适合复杂聚合</li><li>外部依赖多，部署运维麻烦</li></ul><h2 id="4-clickhouse"><a href="#4-clickhouse" class="headerlink" title="4. clickhouse"></a>4. clickhouse</h2><p>完全列式存储计算的分析性数据库，OLAP</p><p>优点</p><ul><li>数据压缩</li><li>多核并行处理，单机性能到极限</li><li>适合复杂深度聚合：merge tree</li><li>写入吞吐量大，ES 5倍以上</li><li>查询速度快，支持SQL（列式+压缩）</li><li>支持向量化计算</li><li>服务器成本低，稳定性更高</li></ul><p>缺点：</p><ul><li>分布式依赖zk，无节点发现能力，需要手动配置（和mongodb一样）</li><li>列式数据库，不支持全文检索（列式存储）</li><li>无法动态添加字段</li><li>日志无法长期保存（下线清理）</li><li>不支持高并发查询（qps 100，单次查询利用所有资源）</li></ul><h2 id="5-es：全文索引"><a href="#5-es：全文索引" class="headerlink" title="5. es：全文索引"></a>5. es：全文索引</h2><h3 id="（1）mongodb"><a href="#（1）mongodb" class="headerlink" title="（1）mongodb"></a>（1）mongodb</h3><ul><li>文档查询性能：倒排索引/KDB-Tree比B+树厉害</li><li>聚合分析能力：ES提供doc-value，比mongodb行式快</li><li>分布式（集群分片副本）：ES自动 &gt; mongodb手动</li><li>ES特色功能比mongodb多：kibana，监控等等</li><li>ES适合JAVA开发，RESTFUL API，mongodb基于C++</li><li>ES字段自动索引，mongodb需要手动建立</li><li>存储：内存，不考虑</li></ul><h3 id="（2）druid"><a href="#（2）druid" class="headerlink" title="（2）druid"></a>（2）druid</h3><ul><li>rollup后druid明细数据会丢失，ES可查询明细数据</li><li>druid适合单类聚合查询，不适合复杂的</li><li>druid外部依赖多，部署运维麻烦（存储使用HDFS)；ES搭建十分简单，外部依赖少</li><li>druid不支持全文检索</li></ul><h3 id="（3）clickhouse"><a href="#（3）clickhouse" class="headerlink" title="（3）clickhouse"></a>（3）clickhouse</h3><ul><li>建表需要专家参与：索引匹配则效率高，不匹配效率波动大</li><li>并发能力弱：单次查询利用所有资源</li><li>不支持全文检索：列式存储</li><li>不适合通过其键检索单行的点查询，es适合点查询</li><li>分布式，无节点发现能力，需手动配置（节点，分片，副本）</li></ul><h3 id="（4）hermes"><a href="#（4）hermes" class="headerlink" title="（4）hermes"></a>（4）hermes</h3><ul><li>读写性能：ES读写性能比Hermes好，因为HDFS的性能比不上本地文件系统</li><li>服务可用性：节点故障时，分片的服务恢复时间相对较长，包括原节点的WAL恢复，索引的online操作；ES可用性较高，多个副本都是online状态，副本切换</li><li>侧重点：hermes侧重数据分析，es侧重搜索和聚合</li><li>运营效益：部门相关系统均选择es/ctsdb，有问题，沟通询问更顺畅方便</li><li>全本搜索 + kibana</li></ul><h3 id="（5）hbase"><a href="#（5）hbase" class="headerlink" title="（5）hbase"></a>（5）hbase</h3><ul><li>查询：hbase不支持复杂查询（列式存储）</li><li>依赖重：hbase无专用查询语言，依赖第三方工具</li><li>Rowkey：hbase依赖Rowkey设计，ES更通用</li></ul><h2 id="6-hermes"><a href="#6-hermes" class="headerlink" title="6. hermes"></a>6. hermes</h2><p>大数据实时分析系统<br>海量数据实时写入和存储，低延迟查询分析的平台<br>索引的读写和分布式架构自研，底层存储基于HDFS，集群管理利用ZK</p><p>缺点</p><ul><li>写入搜索性能差一点（访问HDFS，比不上访问本地文件系统）</li><li>查询写入性能差</li></ul><p>优点</p><ul><li>数据导入可以通过kafka等直接写入/MapReduce</li><li>计算与存储分离，管理精细化，浪费更少</li><li>分片数据存储在HDFS，资源更加弹性</li><li>写入时资源消耗低，可用于索引合并的资源更多，减少小索引的数量，提高查询性能，副本异步同步</li><li>hermes将索引和数据分离存储，降低索引目录刷盘次数和目录个数，提高读写</li><li>hermes适合数据分析，es适合检索</li><li>适合更大规模的业务</li></ul><h2 id="7-hbase"><a href="#7-hbase" class="headerlink" title="7. hbase"></a>7. hbase</h2><p>基于HDFS的数据库，列式存储，无专用查询语言，NoSql数据库</p><p>优点</p><ul><li>海量数据实时查询</li><li>极强的横向扩展能力</li><li>近实时系统，支持实时查询</li><li>支持更大量的数据</li></ul><p>缺点</p><ul><li>复杂查询难以进行，列式存储</li><li>依赖多：无专用查询语言，依赖第三方</li><li>基于RowKey，RowKey设计的好坏决定了HBase使用效果</li></ul><h2 id="8-hadoop"><a href="#8-hadoop" class="headerlink" title="8. hadoop"></a>8. hadoop</h2><p>mapReduce + HDFS，hive和hbase的基础</p><p>缺点：数据延迟高（离线批处理） + 查询性能差</p><h2 id="9-hive"><a href="#9-hive" class="headerlink" title="9. hive"></a>9. hive</h2><p>hadoop数据仓库工具，分析查询引擎，用于数据分析</p><p>功能：hive将sql翻译成MapReduce，处理和计算HDFS数据<br>缺点：数据延迟高（离线批处理）<br>特点：本身不存储也不计算，存储依赖HDFS，计算依赖MapReduce</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-关系型数据库：mysql-postgre&quot;&gt;&lt;a href=&quot;#1-关系型数据库：mysql-postgre&quot; class=&quot;headerlink&quot; title=&quot;1. 关系型数据库：mysql + postgre&quot;&gt;&lt;/a&gt;1. 关系型数据库：mysql +</summary>
      
    
    
    
    <category term="答辩" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/"/>
    
    <category term="大数据" scheme="http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="big-data" scheme="http://example.com/tags/big-data/"/>
    
  </entry>
  
  <entry>
    <title>hexo-operation</title>
    <link href="http://example.com/2021/11/05/hexo-operation/"/>
    <id>http://example.com/2021/11/05/hexo-operation/</id>
    <published>2021-11-05T08:54:14.000Z</published>
    <updated>2021-11-05T09:56:43.845Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>新建<br><code>hexo new &quot;file-name&quot;</code><br>新建的markdown文件在<code>source/_post/</code>目录下</p></li><li><p>生成静态网页<br><code>hexo generate</code><br>生成的静态网页在<code>public</code>目录的相应的日期下，比如2021-11-05生成，在<code>public/2021/11/05</code>文件夹下</p></li><li><p>本地启动<br><code>hexo server</code><br>启动端口为4000，可使用<code>localhost:4000</code>查看</p></li><li><p>部署<br><code>hexo deploy</code><br>网址为：huiresurgeran.github.io<br>带提交信息<code>hexo deploy -m &quot;commit messgae</code></p></li><li><p>删除<br>（1）去本地文件夹的<code>/source/_post</code>目录下删除需要删除的<code>.md</code>文件<br>（2）去本地文件夹的<code>/public</code>目录下删除这篇博客对应的文件夹（根据发布时间归档）<br>（3）重新生成并发布：generate + deploy</p></li><li><p>问题<br>博客更新时出现问题，可以进行清理并重新生成静态网页<br><code>hexo clean</code><br><code>hexo generate</code></p></li><li><p>参考内部文档<br><a class="link" href="https://km.woa.com/group/19976/articles/show/297274?kmref=search&amp;from_page=1&amp;no=2">https://km.woa.com/group/19976/articles/show/297274?kmref=search&amp;from_page=1&amp;no=2<i class="fas fa-external-link-alt"></i></a></p></li><li><p>git分支备份hexo md源码<br><a class="link" href="https://blog.csdn.net/qq_45271256/article/details/105800705?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1.no_search_link&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-1.no_search_link">https://blog.csdn.net/qq_45271256/article/details/105800705?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link<i class="fas fa-external-link-alt"></i></a></p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;&lt;p&gt;新建&lt;br&gt;&lt;code&gt;hexo new &amp;quot;file-name&amp;quot;&lt;/code&gt;&lt;br&gt;新建的markdown文件在&lt;code&gt;source/_post/&lt;/code&gt;目录下&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;生成静态网页&lt;br&gt;&lt;cod</summary>
      
    
    
    
    <category term="code-tool" scheme="http://example.com/categories/code-tool/"/>
    
    <category term="hexo" scheme="http://example.com/categories/code-tool/hexo/"/>
    
    
    <category term="hexo" scheme="http://example.com/tags/hexo/"/>
    
    <category term="tool" scheme="http://example.com/tags/tool/"/>
    
  </entry>
  
</feed>
