{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[{"title":"about","date":"2021-02-25T13:22:27.000Z","updated":"2021-02-25T13:22:27.868Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":""},{"title":"links","date":"2021-02-25T13:22:45.000Z","updated":"2021-02-25T13:22:45.356Z","comments":true,"path":"links/index.html","permalink":"http://example.com/links/index.html","excerpt":"","text":""},{"title":"categories","date":"2021-02-25T13:22:36.000Z","updated":"2021-02-25T13:22:36.268Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-02-25T13:22:41.000Z","updated":"2021-02-25T13:22:41.351Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"changelog","date":"2021-02-25T13:28:40.000Z","updated":"2021-02-25T13:28:40.896Z","comments":true,"path":"changelog/index.html","permalink":"http://example.com/changelog/index.html","excerpt":"","text":""}],"posts":[{"title":"other-trace-systems","slug":"other-trace-systems","date":"2021-11-09T13:24:32.000Z","updated":"2021-11-09T13:46:57.521Z","comments":true,"path":"2021/11/09/other-trace-systems/","link":"","permalink":"http://example.com/2021/11/09/other-trace-systems/","excerpt":"","text":"1. 业界其他（1）zipkin公司：Twitter 缺点： 基于java开发，不支持C++ http上报，消耗性能 拦截请求，入侵强 支持trace，不支持监控告警 （2）鹰眼公司：阿里特单：存储在HBASE缺点：不开源 （3）Pinpoint公司：韩国 优点： 字节码注入，无侵入 存储使用hbase 缺点： 仅支持java服务，不支持C++ 不支持查询单个调用链 不兼容OpenTracing 不支持trace （4）CAT公司：美团 优点：基于JAVA开发，支持多种语言 缺点： 埋点，代码入侵强 文档少，资料混乱 停止维护 （5）Dapper公司：谷歌缺点：不开源 （6）Opencensus公司：谷歌 优点：开源 缺点： 无架构梳理 不支持日志 基于agent/controller，依赖重，耦合度高，灵活度低 （7）skywalking公司：华为 优点： JAVA字节码注入，无侵入 兼容OpenTracing 缺点： 依赖多 不支持C++ （8）Jaeger公司：Uber 优点： 支持多种语言，golang开发 兼容OpenTracing 缺点： 拦截请求，入侵强 支持trace，不支持监控告警 （9）clickhouse介绍：面向列的数据库管理系统，用于在线分析查询 优点 开源 查询速度快 容错性高 可靠性强 扩展性高 易用性高 支持SQL，在线查询，近似计算 缺点 不支持事务 修改/删除支持差 2. 公司内部（1） 天机阁1.0 zipkin协议 + 鹰眼架构 需要SDK和agent，外部依赖重 只有trace，无log和metric 数据延迟60s 不支持私有化 不支持多租户 （2） 天机阁2.0 2020年底上线 IP相关需要自行扩展 数据不标准，需要特殊处理 安全性/主题区分需要考虑","categories":[{"name":"答辩","slug":"答辩","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/"},{"name":"模调","slug":"答辩/模调","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E6%A8%A1%E8%B0%83/"}],"tags":[{"name":"trace","slug":"trace","permalink":"http://example.com/tags/trace/"},{"name":"system","slug":"system","permalink":"http://example.com/tags/system/"}]},{"title":"FMHA","slug":"FMHA","date":"2021-11-09T13:24:23.000Z","updated":"2021-11-09T13:30:26.452Z","comments":true,"path":"2021/11/09/FMHA/","link":"","permalink":"http://example.com/2021/11/09/FMHA/","excerpt":"","text":"1. 一主三备主：锦绣备：锦绣 + 荔景 + 光明 2. 复制类型同步/半同步 3. 容灾强容灾 4. 卡主修复关闭：直接切换主备开启：异步复制，容易出现单点故障，导致数据丢失","categories":[{"name":"答辩","slug":"答辩","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/"},{"name":"数据库","slug":"答辩/数据库","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],"tags":[{"name":"db","slug":"db","permalink":"http://example.com/tags/db/"}]},{"title":"CTSDB查询优化","slug":"CTSDB查询优化","date":"2021-11-09T13:24:09.000Z","updated":"2021-11-09T13:28:33.727Z","comments":true,"path":"2021/11/09/CTSDB查询优化/","link":"","permalink":"http://example.com/2021/11/09/CTSDB%E6%9F%A5%E8%AF%A2%E4%BC%98%E5%8C%96/","excerpt":"","text":"1. from/size避免分页深度 2. 实时聚合 =》 rollup实时聚合影响：内存占用，分桶多的数据 3. 排序优化 index sorting，docID和indexSorting的顺序一致 遍历 =》 提前中断 降低了写入性能 提高了查询性能 预排序 + after key + 提前中断 数据压缩率 4. 查询剪枝segment，最大值最小值遍历 =》 跳过 5. routing一次聚合 + 分片级并发 6. rollup流式聚合（并发分页）indexSorting（提前中断）查询剪枝routing（分片级并发） 7. composite","categories":[{"name":"答辩","slug":"答辩","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/"},{"name":"大数据","slug":"答辩/大数据","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%A4%A7%E6%95%B0%E6%8D%AE/"}],"tags":[{"name":"ctsdb","slug":"ctsdb","permalink":"http://example.com/tags/ctsdb/"},{"name":"search","slug":"search","permalink":"http://example.com/tags/search/"}]},{"title":"权限 & 数据安全","slug":"权限-数据安全","date":"2021-11-09T13:18:01.000Z","updated":"2021-11-09T13:23:52.809Z","comments":true,"path":"2021/11/09/权限-数据安全/","link":"","permalink":"http://example.com/2021/11/09/%E6%9D%83%E9%99%90-%E6%95%B0%E6%8D%AE%E5%AE%89%E5%85%A8/","excerpt":"","text":"1. 权限 web：权限系统 openapi：鉴权系统 + 配置 CTSDB：用户名密码 CKV+：用户名密码 FMHA：强密码 2. 安全（1）存储安全 kafka 副本 + leader 加密（SSL，影响性能） + 身份验证 + 授权 ctsdb 副本 + 选举 密码 + VPC网络隔离 身份认证 + 用户鉴权 FMHA 一地三中心 密码 + 防火墙 半同步 + GTID + read_only ckv+ 数据同步：异步 + 强一致 数据备份：本地快照 + 冷备 副本分片：主备切换 （2）信息安全数据隔离：权限环境：部署事后审计 （3）传输安全kafka：加密 + SSLFMHA：加密CTSDB：内部TLS + 外部HTTPSckv+：无","categories":[{"name":"答辩","slug":"答辩","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/"},{"name":"安全","slug":"答辩/安全","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%AE%89%E5%85%A8/"}],"tags":[{"name":"auth","slug":"auth","permalink":"http://example.com/tags/auth/"},{"name":"data-safe","slug":"data-safe","permalink":"http://example.com/tags/data-safe/"}]},{"title":"慢查询 & 限流 & 限频","slug":"search","date":"2021-11-09T13:09:20.000Z","updated":"2021-11-09T13:16:26.582Z","comments":true,"path":"2021/11/09/search/","link":"","permalink":"http://example.com/2021/11/09/search/","excerpt":"","text":"1. 慢查询（1）ctsdb：30s超时影响：CPU，内存 优化： 索引，不用通配符 agg改成composite 分片数据 聚合拆分成多个，避免分桶太多 独立协调节点 routing 增加刷新间隔 配置熔断：内存限制 （2）fmha影响：session长期占用，cpu、内存升高，可用性降低 优化： 主键 索引减少like 拆表/中间表 查询分解 limit优化 2. 限流（1）接口限流 计数算法：简单 滑动窗口：存储空间大 漏桶算法 令牌桶：允许一定程度的并发 （2）数据上报限流writer： RateLimiter，令牌桶 2w/s/线程 processor： writer queue满了，熔断，蓄水池 恢复，writer queue 蓄水池，writer queue Loader： LoadQuata，数值判断大小 6w/s/线程","categories":[{"name":"答辩","slug":"答辩","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/"},{"name":"其他","slug":"答辩/其他","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%85%B6%E4%BB%96/"}],"tags":[{"name":"search","slug":"search","permalink":"http://example.com/tags/search/"},{"name":"server","slug":"server","permalink":"http://example.com/tags/server/"}]},{"title":"OMS-GATEWAY","slug":"oms","date":"2021-11-09T13:02:40.000Z","updated":"2021-11-09T13:08:24.912Z","comments":true,"path":"2021/11/09/oms/","link":"","permalink":"http://example.com/2021/11/09/oms/","excerpt":"","text":"1. 架构oms-api：oms协议的封装oms-gateway：网关，服务发现，负载均衡，统一鉴权oms应用框架：子服务框架，oms协议，服务发现协议 2. 容灾（1）自身集群L5访问网关，网关切换，域名集群，多机器组成，同步子服务信息 （2）子服务 子服务信息保存在内存中 同步协议，同步子服务信息到其他网关机器中 子服务同步其他子服务信息到本地 网关检查子服务上报的心跳，剔除 客户端缓存 3. 路由（1）就近路由根据网关所在机房，相同地理信息的子服务负载均衡，轮询选择IP （2）指定机房路由4. 鉴权权限控制：统一鉴权中心 + 配置（白名单，人工）客户端身份的鉴定 + 被访问服务的权限控制网关对子服务鉴权，agent","categories":[{"name":"答辩","slug":"答辩","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/"},{"name":"OMS","slug":"答辩/OMS","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/OMS/"}],"tags":[{"name":"oms","slug":"oms","permalink":"http://example.com/tags/oms/"}]},{"title":"cftologserver","slug":"cftologserver","date":"2021-11-09T12:56:11.000Z","updated":"2021-11-09T13:02:28.279Z","comments":true,"path":"2021/11/09/cftologserver/","link":"","permalink":"http://example.com/2021/11/09/cftologserver/","excerpt":"","text":"1. 模块化（1）五个模块（2）资源配置kafka集群：深圳 + 上海消费者：分片16cacher：ThreadPoolExecutor，100个线程，2000个无界队列processor：每个尾号一个线程（尾号hash % 线程数）writer：1/分片 + 1/processor （3）机器说明B70内存：125G，16G * 8 = 128G硬盘：300G物理CPU：2核数：12逻辑CPU：48（2 * 12 *2）CPU Mhz：2301.00RAID：RAID1网络：10GE * 2，10G以太网网络 2. 线程池（1）作用降低资源消耗提高系统运行速度提高可管理性 （2）使用ThreadPoolExecutor核心线程池：100阻塞队列：ArrayBlockingQueue，2000线程池：200饱和策略：DiscardPolicy 3. 缓存同步锁，synchronized，多线程环境，线程安全同步锁","categories":[{"name":"答辩","slug":"答辩","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/"},{"name":"日志服务","slug":"答辩/日志服务","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1/"}],"tags":[{"name":"log","slug":"log","permalink":"http://example.com/tags/log/"}]},{"title":"ckv+ & ckv & redis","slug":"cache","date":"2021-11-09T12:41:16.000Z","updated":"2021-11-09T12:54:35.251Z","comments":true,"path":"2021/11/09/cache/","link":"","permalink":"http://example.com/2021/11/09/cache/","excerpt":"","text":"1. CKV+（1）多数据结构string，list，zset等等 （2）并发处理单进程，多线程一个分片绑定一个CPU，避免加锁 网络IO，编解码，分给所有CPU 数据执行，分片ID指定的CPU （3）强一致同步raft协议 + 冷备 （4）多协议支持redis + memcache （5）冷热分离不支持 （6）读写性能多核，多线程一个分片一个CPU，避免加锁CPU对应独立的处理进程网络IO和编解码，使用所有的CPU数据执行，使用分片ID指定的CPU （7）限制key，最大64kvalue，最大32M （8）内存使用率多规格block + 动态分配page 2. CKV（1）多数据结构只支持string （2）并发处理多进程加锁 （3）强一致同步不支持其他同步:recover恢复中心 （4）多协议支持memcache （5）冷热分离热数据系统,CMEM冷数据系统，SSD （6）读写性能网络IO与核心流程解耦多进程逻辑处理，进程间加锁（毛刺） （7）限制key，2-10bytesvalue，最大10M，最好小于1M （8）内存使用率和obj_size业务平均记录大小有关业务记录大小分布越集中，碎片率越低 3. Redis（1）多数据结构string，list，zset等等 （2）并发处理多线程，2020年下推出网络IO多线程 （3）强一致同步不支持，只有异步复制 （4）多协议支持（5）冷热分离不支持 （6）读写性能非阻塞IO + IO多路复用单线程 + 队列技术 + hash数据结构 （7）限制value，1GB （8）内存使用率LRU,TTL,腾出空间 过期键删除，释放空间无法充分利用 分布式存储，槽机制 缩短key，value长度 序列化 数据对齐 安全重启 固定范围的内存块分配：小，大，巨大每个范围又被划分成多个小的内存块单位","categories":[{"name":"答辩","slug":"答辩","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/"},{"name":"缓存","slug":"答辩/缓存","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E7%BC%93%E5%AD%98/"}],"tags":[{"name":"cache","slug":"cache","permalink":"http://example.com/tags/cache/"}]},{"title":"flink & spark & storm & oceanus & 缓存","slug":"stream-computing","date":"2021-11-09T12:32:37.000Z","updated":"2021-11-09T12:40:00.999Z","comments":true,"path":"2021/11/09/stream-computing/","link":"","permalink":"http://example.com/2021/11/09/stream-computing/","excerpt":"","text":"1. flink流式模型：原生流处理，一条一条处理数据处理保证：高，有且仅有一次，检查点机制容错性：中等，checkpoint，快照容错开销：低，小批量数据（轻量级，不阻塞流，checkpoint异步，不影响吞吐量）延时：低，一条一条处理吞吐量：高，缓存块 + 超时值 2. spark流式模型：微批处理数据处理保证：高，有且仅有一次，重新计算容错性：高，RDD checkpoint（弹性分布式数据集）（通过整个数据集的计算流程的血缘关系实现重建）容错开销：中等（有状态计算需要额外的RDD维护状态，影响吞吐）延时：中等，小批次处理吞吐量：高，微批次 3. storm流式模型：原生流处理数据处理保证：中等，至少一次，重复容错性：中等，上有数据备份 + ACK容错开销：高，ACK（所有节点每个节点ACK一次，每条data都做ACK）延时：低，一条一条处理吞吐量：低，ACK，容错影响易用性：低，遵循topology 4. oceanus版本支持：外部最新1.13.2，内部还在1.0.9特性支持：不足运维：值班制度其他：小bug多","categories":[{"name":"答辩","slug":"答辩","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/"},{"name":"流式计算","slug":"答辩/流式计算","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E6%B5%81%E5%BC%8F%E8%AE%A1%E7%AE%97/"}],"tags":[{"name":"stream-computing","slug":"stream-computing","permalink":"http://example.com/tags/stream-computing/"}]},{"title":"hermes & es & ces & ctsdb","slug":"hermes-es","date":"2021-11-09T12:22:30.000Z","updated":"2021-11-09T13:17:28.041Z","comments":true,"path":"2021/11/09/hermes-es/","link":"","permalink":"http://example.com/2021/11/09/hermes-es/","excerpt":"","text":"1. hermes写入搜索性能：HDFS 2. es存储规模限制：集群管理成本，信息同步成本 写入搜索性能：本地磁盘 3. ces存储规模：集群管理成本，信息同步成本 写入搜索性能：同CTSDB 特点：适合检索 4. CTSDB（1）存储规模集群大小，管理成本，集群元数据大同步慢 （2）低成本存储编码压缩算法 + rollup + 过期时间 （3）写入搜索性能 写入 写入内存，之后再写入磁盘 文件裁剪优化 查询 缓存 倒排索引 存储模型，segment合并，按时间序分层合并 执行引擎优化，index sorting + after key + 提前中断 文件裁剪优化 （4）时序特性时序场景管理能力 metric封装 按时间滚动生成子表 自动产生自动销毁 过期自动清理 （5）聚合rollup 流式聚合（分页并发） 查询剪枝（segment） index sorting（提前中断） routing（分片级并发） (6) CTSDB manager每个地域一个功能： 任务下发 index自动创建/删除 变配 监控 发货 （7）CTSDB-GATEWAYVPC网络：安全性VPC的VIP：负载均衡","categories":[{"name":"答辩","slug":"答辩","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/"},{"name":"大数据","slug":"答辩/大数据","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%A4%A7%E6%95%B0%E6%8D%AE/"}],"tags":[{"name":"big-data","slug":"big-data","permalink":"http://example.com/tags/big-data/"}]},{"title":"TDW & Hermes","slug":"tdw-hermes","date":"2021-11-09T12:18:23.000Z","updated":"2021-11-09T12:21:14.943Z","comments":true,"path":"2021/11/09/tdw-hermes/","link":"","permalink":"http://example.com/2021/11/09/tdw-hermes/","excerpt":"","text":"1. 经过三层存储2. tdw性能差tdw基于hive，hdfs 3. hermes性能差基于HDFS，比不上本地文件系统tdw -&gt; hermes，LZ离线导入，提交MR任务构建索引，受资源池影响，还需要进行索引合并","categories":[{"name":"答辩","slug":"答辩","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/"},{"name":"大数据","slug":"答辩/大数据","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%A4%A7%E6%95%B0%E6%8D%AE/"}],"tags":[{"name":"big-data","slug":"big-data","permalink":"http://example.com/tags/big-data/"}]},{"title":"大数据处理平台对比","slug":"big-data-compare","date":"2021-11-09T04:51:15.000Z","updated":"2021-11-09T14:05:18.683Z","comments":true,"path":"2021/11/09/big-data-compare/","link":"","permalink":"http://example.com/2021/11/09/big-data-compare/","excerpt":"","text":"1. 关系型数据库：mysql + postgre优点： 稳定 简单 结构化数据 缺点： 存储成本大（时序数据压缩不佳） 维护成本高（人工分库分表） 写入吞吐低（磁盘IO + 索引建立） 查询性能差（磁盘IO + 索引建立） 聚合海量性能差（适合事务，不适合聚合） 数据规模支持小 难以横向扩展 postgre，聚合查询，容易出现性能瓶颈 2. 非关系型数据库：mongodb优点 查询功能强大 表结构灵活可变 删改数据方便 海量存储 缺点 多表查询、复杂事务等高级操作有阻碍 非分布式，难以横向扩容：集群配置，绑定分片、副本节点 字段搜索需要手动索引：B+ tree，最左优先 不适合大数据量查询：比不上ES的倒排索引（亿级） 不适合多表和复杂条件查询：创建B+树索引 不适合全文检索：字段个数有限制 不适合聚合：负责聚合通过MapReduce，速度慢 和es的对比 mongodb适合需要修改的数据，es适合不需要的 es查询/全文索引/聚合分析比mongodb强 3. druid，德鲁伊介绍：分布式的，支持实时多维OLAP分析的数据处理系统优点： 适合聚合，快速扫描：列式存储，压缩的位图索引 可扩展的分布式系统：自我平衡，易于操作 支持数据规模大 支持实时或批量查询，秒级查询：列存压缩，位图索引，倒排索引，预聚合 基于时间的分区：提高时间数据性能 缺点： 支持基础的搜索，不支持全文搜索 核心功能rollup，rollup之后丢失明细数据 不适合复杂聚合 外部依赖多，部署运维麻烦 4. clickhouse完全列式存储计算的分析性数据库，OLAP 优点 数据压缩 多核并行处理，单机性能到极限 适合复杂深度聚合：merge tree 写入吞吐量大，ES 5倍以上 查询速度快，支持SQL（列式+压缩） 支持向量化计算 服务器成本低，稳定性更高 缺点： 分布式依赖zk，无节点发现能力，需要手动配置（和mongodb一样） 列式数据库，不支持全文检索（列式存储） 无法动态添加字段 日志无法长期保存（下线清理） 不支持高并发查询（qps 100，单次查询利用所有资源） 5. es6. hermes大数据实时分析系统海量数据实时写入和存储，低延迟查询分析的平台索引的读写和分布式架构自研，底层存储基于HDFS，集群管理利用ZK 缺点 写入搜索性能差一点（访问HDFS，比不上访问本地文件系统） 查询写入性能差 优点 数据导入可以通过kafka等直接写入/MapReduce 计算与存储分离，管理精细化，浪费更少 分片数据存储在HDFS，资源更加弹性 写入时资源消耗低，可用于索引合并的资源更多，减少小索引的数量，提高查询性能，副本异步同步 hermes将索引和数据分离存储，降低索引目录刷盘次数和目录个数，提高读写 hermes适合数据分析，es适合检索 适合更大规模的业务 7. hbase基于HDFS的数据库，列式存储，无专用查询语言，NoSql数据库 优点 海量数据实时查询 极强的横向扩展能力 近实时系统，支持实时查询 支持更大量的数据 缺点 复杂查询难以进行，列式存储 依赖多：无专用查询语言，依赖第三方 基于RowKey，RowKey设计的好坏决定了HBase使用效果 8. hadoopmapReduce + HDFS，hive和hbase的基础 缺点：数据延迟高（离线批处理） + 查询性能差 9. hivehadoop数据仓库工具，分析查询引擎，用于数据分析 功能：hive将sql翻译成MapReduce，处理和计算HDFS数据缺点：数据延迟高（离线批处理）特点：本身不存储也不计算，存储依赖HDFS，计算依赖MapReduce","categories":[{"name":"答辩","slug":"答辩","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/"},{"name":"大数据","slug":"答辩/大数据","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%A4%A7%E6%95%B0%E6%8D%AE/"}],"tags":[{"name":"big-data","slug":"big-data","permalink":"http://example.com/tags/big-data/"}]},{"title":"hexo-operation","slug":"hexo-operation","date":"2021-11-05T08:54:14.000Z","updated":"2021-11-05T09:56:43.845Z","comments":true,"path":"2021/11/05/hexo-operation/","link":"","permalink":"http://example.com/2021/11/05/hexo-operation/","excerpt":"","text":"新建hexo new &quot;file-name&quot;新建的markdown文件在source/_post/目录下 生成静态网页hexo generate生成的静态网页在public目录的相应的日期下，比如2021-11-05生成，在public/2021/11/05文件夹下 本地启动hexo server启动端口为4000，可使用localhost:4000查看 部署hexo deploy网址为：huiresurgeran.github.io带提交信息hexo deploy -m &quot;commit messgae 删除（1）去本地文件夹的/source/_post目录下删除需要删除的.md文件（2）去本地文件夹的/public目录下删除这篇博客对应的文件夹（根据发布时间归档）（3）重新生成并发布：generate + deploy 问题博客更新时出现问题，可以进行清理并重新生成静态网页hexo cleanhexo generate 参考内部文档https://km.woa.com/group/19976/articles/show/297274?kmref=search&amp;from_page=1&amp;no=2 git分支备份hexo md源码https://blog.csdn.net/qq_45271256/article/details/105800705?spm=1001.2101.3001.6650.1&amp;utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-1.no_search_link","categories":[{"name":"code-tool","slug":"code-tool","permalink":"http://example.com/categories/code-tool/"},{"name":"hexo","slug":"code-tool/hexo","permalink":"http://example.com/categories/code-tool/hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"tool","slug":"tool","permalink":"http://example.com/tags/tool/"}]},{"title":"java-bytes","slug":"java-bytes","date":"2021-11-05T08:52:31.000Z","updated":"2021-11-05T08:52:31.947Z","comments":true,"path":"2021/11/05/java-bytes/","link":"","permalink":"http://example.com/2021/11/05/java-bytes/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"maven_setting","slug":"maven-setting","date":"2021-03-03T06:13:15.000Z","updated":"2021-03-03T06:42:12.836Z","comments":true,"path":"2021/03/03/maven-setting/","link":"","permalink":"http://example.com/2021/03/03/maven-setting/","excerpt":"","text":"settings.xml文件用途 设置maven参数 包含本地仓库路径，远程仓库路径，认证信息等 settings.xml文件位置 user.home/.m2/settings.xml 元素 顶级元素 LocalRepository: 本地仓库路径&lt;localRepository&gt;$&#123;user.home&#125;/.m2/repository&lt;/localRepository&gt; InteractiveMode: maven是否需要和用户交互获得输入&lt;interactiveMode&gt;true&lt;/interactiveMode&gt; UsePluginRegistry: Offline: maven是否需要在离线模式下运行&lt;offline&gt;true&lt;/offline&gt; PluginGroups Servers: 仓库账号信息1234567891011121314151617181920&lt;!--配置服务端的一些设置。一些设置如安全证书不应该和pom.xml一起分发。这种类型的信息应该存在于构建服务器上的settings.xml文件中。 --&gt;&lt;servers&gt; &lt;!--服务器元素包含配置服务器时需要的信息 --&gt; &lt;server&gt; &lt;!--这是server的id（注意不是用户登陆的id），该id与distributionManagement中repository元素的id相匹配。 --&gt; &lt;id&gt;server001&lt;&#x2F;id&gt; &lt;!--鉴权用户名。鉴权用户名和鉴权密码表示服务器认证所需要的登录名和密码。 --&gt; &lt;username&gt;my_login&lt;&#x2F;username&gt; &lt;!--鉴权密码 。鉴权用户名和鉴权密码表示服务器认证所需要的登录名和密码。密码加密功能已被添加到2.1.0 +。详情请访问密码加密页面 --&gt; &lt;password&gt;my_password&lt;&#x2F;password&gt; &lt;!--鉴权时使用的私钥位置。和前两个元素类似，私钥位置和私钥密码指定了一个私钥的路径（默认是$&#123;user.home&#125;&#x2F;.ssh&#x2F;id_dsa）以及如果需要的话，一个密语。将来passphrase和password元素可能会被提取到外部，但目前它们必须在settings.xml文件以纯文本的形式声明。 --&gt; &lt;privateKey&gt;$&#123;usr.home&#125;&#x2F;.ssh&#x2F;id_dsa&lt;&#x2F;privateKey&gt; &lt;!--鉴权时使用的私钥密码。 --&gt; &lt;passphrase&gt;some_passphrase&lt;&#x2F;passphrase&gt; &lt;!--文件被创建时的权限。如果在部署的时候会创建一个仓库文件或者目录，这时候就可以使用权限（permission）。这两个元素合法的值是一个三位数字，其对应了unix文件系统的权限，如664，或者775。 --&gt; &lt;filePermissions&gt;664&lt;&#x2F;filePermissions&gt; &lt;!--目录被创建时的权限。 --&gt; &lt;directoryPermissions&gt;775&lt;&#x2F;directoryPermissions&gt; &lt;&#x2F;server&gt;&lt;&#x2F;servers&gt; Mirrors: 仓库列表的下载镜像列表12345678910111213&lt;mirrors&gt; &lt;!-- 给定仓库的下载镜像。 --&gt; &lt;mirror&gt; &lt;!-- 该镜像的唯一标识符。id用来区分不同的mirror元素。 --&gt; &lt;id&gt;planetmirror.com&lt;&#x2F;id&gt; &lt;!-- 镜像名称 --&gt; &lt;name&gt;PlanetMirror Australia&lt;&#x2F;name&gt; &lt;!-- 该镜像的URL。构建系统会优先考虑使用该URL，而非使用默认的服务器URL。 --&gt; &lt;url&gt;http:&#x2F;&#x2F;downloads.planetmirror.com&#x2F;pub&#x2F;maven2&lt;&#x2F;url&gt; &lt;!-- 被镜像的服务器的id。例如，如果我们要设置了一个Maven中央仓库（http:&#x2F;&#x2F;repo.maven.apache.org&#x2F;maven2&#x2F;）的镜像，就需要将该元素设置成central。这必须和中央仓库的id central完全一致。 --&gt; &lt;mirrorOf&gt;central&lt;&#x2F;mirrorOf&gt; &lt;&#x2F;mirror&gt;&lt;&#x2F;mirrors&gt; Proxies: 代理123456789101112131415161718192021&lt;proxies&gt; &lt;!--代理元素包含配置代理时需要的信息 --&gt; &lt;proxy&gt; &lt;!--代理的唯一定义符，用来区分不同的代理元素。 --&gt; &lt;id&gt;myproxy&lt;&#x2F;id&gt; &lt;!--该代理是否是激活的那个。true则激活代理。当我们声明了一组代理，而某个时候只需要激活一个代理的时候，该元素就可以派上用处。 --&gt; &lt;active&gt;true&lt;&#x2F;active&gt; &lt;!--代理的协议。 协议:&#x2F;&#x2F;主机名:端口，分隔成离散的元素以方便配置。 --&gt; &lt;protocol&gt;http&lt;&#x2F;protocol&gt; &lt;!--代理的主机名。协议:&#x2F;&#x2F;主机名:端口，分隔成离散的元素以方便配置。 --&gt; &lt;host&gt;proxy.somewhere.com&lt;&#x2F;host&gt; &lt;!--代理的端口。协议:&#x2F;&#x2F;主机名:端口，分隔成离散的元素以方便配置。 --&gt; &lt;port&gt;8080&lt;&#x2F;port&gt; &lt;!--代理的用户名，用户名和密码表示代理服务器认证的登录名和密码。 --&gt; &lt;username&gt;proxyuser&lt;&#x2F;username&gt; &lt;!--代理的密码，用户名和密码表示代理服务器认证的登录名和密码。 --&gt; &lt;password&gt;somepassword&lt;&#x2F;password&gt; &lt;!--不该被代理的主机名列表。该列表的分隔符由代理服务器指定；例子中使用了竖线分隔符，使用逗号分隔也很常见。 --&gt; &lt;nonProxyHosts&gt;*.google.com|ibiblio.org&lt;&#x2F;nonProxyHosts&gt; &lt;&#x2F;proxy&gt;&lt;&#x2F;proxies&gt; Profiles: 根据环境参数调整构建配置的列表1234567891011121314&lt;profiles&gt; &lt;profile&gt; &lt;!-- profile的唯一标识 --&gt; &lt;id&gt;test&lt;&#x2F;id&gt; &lt;!-- 自动触发profile的条件逻辑 --&gt; &lt;activation &#x2F;&gt; &lt;!-- 扩展属性列表 --&gt; &lt;properties &#x2F;&gt; &lt;!-- 远程仓库列表 --&gt; &lt;repositories &#x2F;&gt; &lt;!-- 插件仓库列表 --&gt; &lt;pluginRepositories &#x2F;&gt; &lt;&#x2F;profile&gt;&lt;&#x2F;profiles&gt; activation: 自动触发profile的条件逻辑 properties: 扩展属性列表，可以用${X}来使用 repositories: 远程仓库列表12345678910111213141516171819202122232425262728&lt;repositories&gt; &lt;!--包含需要连接到远程仓库的信息 --&gt; &lt;repository&gt; &lt;!--远程仓库唯一标识 --&gt; &lt;id&gt;codehausSnapshots&lt;&#x2F;id&gt; &lt;!--远程仓库名称 --&gt; &lt;name&gt;Codehaus Snapshots&lt;&#x2F;name&gt; &lt;!--如何处理远程仓库里发布版本的下载 --&gt; &lt;releases&gt; &lt;!--true或者false表示该仓库是否为下载某种类型构件（发布版，快照版）开启。 --&gt; &lt;enabled&gt;false&lt;&#x2F;enabled&gt; &lt;!--该元素指定更新发生的频率。Maven会比较本地POM和远程POM的时间戳。这里的选项是：always（一直），daily（默认，每日），interval：X（这里X是以分钟为单位的时间间隔），或者never（从不）。 --&gt; &lt;updatePolicy&gt;always&lt;&#x2F;updatePolicy&gt; &lt;!--当Maven验证构件校验文件失败时该怎么做-ignore（忽略），fail（失败），或者warn（警告）。 --&gt; &lt;checksumPolicy&gt;warn&lt;&#x2F;checksumPolicy&gt; &lt;&#x2F;releases&gt; &lt;!--如何处理远程仓库里快照版本的下载。有了releases和snapshots这两组配置，POM就可以在每个单独的仓库中，为每种类型的构件采取不同的策略。例如，可能有人会决定只为开发目的开启对快照版本下载的支持。参见repositories&#x2F;repository&#x2F;releases元素 --&gt; &lt;snapshots&gt; &lt;enabled &#x2F;&gt; &lt;updatePolicy &#x2F;&gt; &lt;checksumPolicy &#x2F;&gt; &lt;&#x2F;snapshots&gt; &lt;!--远程仓库URL，按protocol:&#x2F;&#x2F;hostname&#x2F;path形式 --&gt; &lt;url&gt;http:&#x2F;&#x2F;snapshots.maven.codehaus.org&#x2F;maven2&lt;&#x2F;url&gt; &lt;!--用于定位和排序构件的仓库布局类型-可以是default（默认）或者legacy（遗留）。Maven 2为其仓库提供了一个默认的布局；然而，Maven 1.x有一种不同的布局。我们可以使用该元素指定布局是default（默认）还是legacy（遗留）。 --&gt; &lt;layout&gt;default&lt;&#x2F;layout&gt; &lt;&#x2F;repository&gt;&lt;&#x2F;repositories&gt; pluginRepositories: 发现插件的远程仓库列表 activeProfiles: 手动激活profiles的列表123 &lt;!-- 要激活的profile id --&gt; &lt;activeProfile&gt;env-test&lt;&#x2F;activeProfile&gt;&lt;&#x2F;activeProfiles&gt;","categories":[{"name":"java","slug":"java","permalink":"http://example.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://example.com/tags/java/"}]},{"title":"电影计划","slug":"movie","date":"2021-03-01T02:14:58.000Z","updated":"2021-03-01T02:26:57.255Z","comments":true,"path":"2021/03/01/movie/","link":"","permalink":"http://example.com/2021/03/01/movie/","excerpt":"","text":"2020 变身特工 八佰 急先锋 花木兰 小妇人 假面饭店 妙先生 金刚川 除暴 紧急救援 沐浴之王 晴雅集 疯狂原始人2 神奇女侠1984 一秒钟 数码宝贝：最后的进化 喜宝 温暖的抱抱 风平浪静 哆啦A梦：大雄的新恐龙 月半爱丽丝 隐形人海兽之子 宝可梦：超梦的逆袭进化 气球","categories":[{"name":"电影","slug":"电影","permalink":"http://example.com/categories/%E7%94%B5%E5%BD%B1/"}],"tags":[{"name":"movie","slug":"movie","permalink":"http://example.com/tags/movie/"}]},{"title":"test","slug":"test","date":"2021-02-26T08:57:03.000Z","updated":"2021-02-26T08:57:03.632Z","comments":true,"path":"2021/02/26/test/","link":"","permalink":"http://example.com/2021/02/26/test/","excerpt":"","text":"","categories":[],"tags":[]},{"title":"api-doc","slug":"api-doc","date":"2021-02-26T07:14:51.000Z","updated":"2021-02-26T07:21:19.526Z","comments":true,"path":"2021/02/26/api-doc/","link":"","permalink":"http://example.com/2021/02/26/api-doc/","excerpt":"","text":"生成文档: apidoc -i src -o dest","categories":[],"tags":[]},{"title":"神盾对账延迟故障复盘","slug":"safe_delay","date":"2021-02-25T12:49:22.000Z","updated":"2021-03-25T11:53:08.445Z","comments":true,"path":"2021/02/25/safe_delay/","link":"","permalink":"http://example.com/2021/02/25/safe_delay/","excerpt":"","text":"2.19 开始有业务反馈神盾出现延迟(shuangchen) 初步来看，agent上报到svr延迟较大，应是大量数据上报超时堆积导致，每次agent上报超时，都会等待20s 2.20 延迟进一步加剧，大约有10+对账，处于延迟边缘，引发大量延迟事件 2.22 下午，发布新版本（增加耗时日志打印），延迟进一步加大，到5点逐渐扩展到2h管理员收到大量告警，agent等待svr处理超过20s 2.22 晚上，发布多个版本，修改数据库线程池大小，增加超时时间设置，延迟降低，出现漏对事件 2.23 早上，延迟再次增加，且出现大量漏对事件，数据库备机压力大，dba增加索引，svr修改线程池，调整超时时间，延迟逐渐减少，漏对逐渐减少 BasicDataSource 改为 HiKariDataSourceHikariCP是一个轻量级的十分快速的JDBC连接池框架。使用了以下这些技术 字节级别的工程技术 微观层面的优化 集合框架的智能使用demo123456789101112HikariConfig config &#x3D; new HikariConfig();HikariDataSource ds;config.setJdbcUrl(&quot;jdbc_url&quot;);config.setUsername(&quot;xxx&quot;);config.setPassword(&quot;xxx&quot;);config.addDataSourceProperty(&quot;cachePrepStms&quot;, &quot;true&quot;);config.addDataSourceProperty(&quot;prepStmtCacheSize&quot;, &quot;250&quot;);config.addDataSourceProperty(&quot;prepStmtCacheSqlLimit&quot;, &quot;2048&quot;);ds &#x3D; new HikariDataSource(config); HikariConfig 配置类，初始化数据源HikariCP可以检测到连接泄漏 索引增加字段（索引机制还是挺复杂的，有时间需要好好研究）跟数据量，数据过滤比例，排序都有关系 返回数据比例&gt;30%，不使用索引 where 和 order条件，先where后order 没有过滤效果的条件，可以不建立索引 时间段查询，&gt;= &amp;&amp; &lt;= 索引效果没有=效果好 like索引效果，没有in效果好 2.24 下午，上报处理逻辑优化，尽量减少查询次数，减少排序，悲观锁改为乐观锁 后续，出现数次safe status更新失败告警，部分数据量大的表耗时偶尔较长，部分对账同时间上报多条数据，待优化","categories":[{"name":"safe","slug":"safe","permalink":"http://example.com/categories/safe/"}],"tags":[{"name":"safe","slug":"safe","permalink":"http://example.com/tags/safe/"}]}],"categories":[{"name":"答辩","slug":"答辩","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/"},{"name":"模调","slug":"答辩/模调","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E6%A8%A1%E8%B0%83/"},{"name":"数据库","slug":"答辩/数据库","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"大数据","slug":"答辩/大数据","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%A4%A7%E6%95%B0%E6%8D%AE/"},{"name":"安全","slug":"答辩/安全","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%AE%89%E5%85%A8/"},{"name":"其他","slug":"答辩/其他","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E5%85%B6%E4%BB%96/"},{"name":"OMS","slug":"答辩/OMS","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/OMS/"},{"name":"日志服务","slug":"答辩/日志服务","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1/"},{"name":"缓存","slug":"答辩/缓存","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E7%BC%93%E5%AD%98/"},{"name":"流式计算","slug":"答辩/流式计算","permalink":"http://example.com/categories/%E7%AD%94%E8%BE%A9/%E6%B5%81%E5%BC%8F%E8%AE%A1%E7%AE%97/"},{"name":"code-tool","slug":"code-tool","permalink":"http://example.com/categories/code-tool/"},{"name":"hexo","slug":"code-tool/hexo","permalink":"http://example.com/categories/code-tool/hexo/"},{"name":"java","slug":"java","permalink":"http://example.com/categories/java/"},{"name":"电影","slug":"电影","permalink":"http://example.com/categories/%E7%94%B5%E5%BD%B1/"},{"name":"safe","slug":"safe","permalink":"http://example.com/categories/safe/"}],"tags":[{"name":"trace","slug":"trace","permalink":"http://example.com/tags/trace/"},{"name":"system","slug":"system","permalink":"http://example.com/tags/system/"},{"name":"db","slug":"db","permalink":"http://example.com/tags/db/"},{"name":"ctsdb","slug":"ctsdb","permalink":"http://example.com/tags/ctsdb/"},{"name":"search","slug":"search","permalink":"http://example.com/tags/search/"},{"name":"auth","slug":"auth","permalink":"http://example.com/tags/auth/"},{"name":"data-safe","slug":"data-safe","permalink":"http://example.com/tags/data-safe/"},{"name":"server","slug":"server","permalink":"http://example.com/tags/server/"},{"name":"oms","slug":"oms","permalink":"http://example.com/tags/oms/"},{"name":"log","slug":"log","permalink":"http://example.com/tags/log/"},{"name":"cache","slug":"cache","permalink":"http://example.com/tags/cache/"},{"name":"stream-computing","slug":"stream-computing","permalink":"http://example.com/tags/stream-computing/"},{"name":"big-data","slug":"big-data","permalink":"http://example.com/tags/big-data/"},{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"},{"name":"tool","slug":"tool","permalink":"http://example.com/tags/tool/"},{"name":"java","slug":"java","permalink":"http://example.com/tags/java/"},{"name":"movie","slug":"movie","permalink":"http://example.com/tags/movie/"},{"name":"safe","slug":"safe","permalink":"http://example.com/tags/safe/"}]}